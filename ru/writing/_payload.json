[{"data":1,"prerenderedAt":1820},["ShallowReactive",2],{"/ru/writing":3,"articles-ru":36},{"id":4,"title":5,"body":6,"date":27,"description":15,"extension":28,"head":27,"meta":29,"navigation":30,"ogImage":27,"path":31,"robots":27,"schemaOrg":27,"seo":32,"sitemap":33,"stem":34,"__hash__":35},"content_ru/ru/3.writing.md","Статьи",{"type":7,"value":8,"toc":24},"minimark",[9],[10,11,12,19],"writing",{},[13,14,16],"template",{"v-slot:title":15},"",[17,18,5],"p",{},[13,20,21],{"v-slot:subtitle":15},[17,22,23],{},"Некоторые статьи на темы, близкие моему сердцу",{"title":15,"searchDepth":25,"depth":25,"links":26},2,[],null,"md",{},true,"/ru/writing",{"title":5,"description":15},{"loc":31},"ru/3.writing","mAqJY0Si63yofomegV-kZ6s05URk8OvppfjwAZPi4R4",[37],{"id":38,"title":39,"body":40,"date":1789,"description":1790,"extension":28,"head":1791,"image":1799,"meta":1800,"navigation":1801,"ogImage":1803,"path":1805,"readingTime":1806,"robots":27,"schemaOrg":1807,"seo":1808,"sitemap":1809,"stem":1812,"tags":1813,"__hash__":1819},"articles_ru/ru/articles/Web Workers в Vue.md","Web Workers в Vue: Создание, Типизация и Использование ",{"type":7,"value":41,"toc":1777},[42,47,50,53,55,84,89,92,264,268,295,298,397,401,404,407,430,433,440,610,613,617,620,623,626,734,737,741,744,747,750,835,838,842,845,875,878,1348,1352,1355,1358,1361,1751,1758,1762,1765,1773],[43,44,46],"h2",{"id":45},"введение-в-web-workers","Введение в Web workers",[17,48,49],{},"Web Workers — это мощный инструмент JavaScript, позволяющий выполнять скрипты в фоновом потоке, отдельно от основного потока браузера. Это означает, что тяжёлые вычисления, такие как обработка больших массивов данных, парсинг JSON или сложные математические операции, не будут блокировать пользовательский интерфейс (UI). В результате приложение остаётся отзывчивым, а пользователь не замечает \"зависаний\".",[17,51,52],{},"Почему Web Workers полезны для проектов?",[17,54,52],{},[56,57,58,66,72,78],"ul",{},[59,60,61,65],"li",{},[62,63,64],"strong",{},"Улучшение производительности:"," Они позволяют распараллеливать задачи, что критично для приложений с интенсивными вычислениями (например, игры, анализ данных или реал-тайм обработка).",[59,67,68,71],{},[62,69,70],{},"Отзывчивость UI:"," Основной поток остаётся свободным для обработки событий, анимаций и рендеринга.",[59,73,74,77],{},[62,75,76],{},"Безопасность:"," Workers не имеют доступа к DOM, что предотвращает случайные мутации UI и делает код более предсказуемым.",[59,79,80,83],{},[62,81,82],{},"Масштабируемость:"," В больших проектах, таких как SPA на Vue, Workers помогают избежать bottleneck'ов в производительности.",[85,86,88],"h3",{"id":87},"проверка-поддержки-web-workers","Проверка поддержки Web Workers",[17,90,91],{},"Хоть и Webworker имеет большую поддержку браузерами документация MDN рекомендует перед использованием вебворкера проверять к нему доступ, и использовать fallback подсчета в основном потоке",[93,94,98],"pre",{"className":95,"code":96,"language":97,"meta":15,"style":15},"language-js shiki shiki-themes github-light github-dark github-dark","if(window.Worker){\n// Инициация воркера\n}\nelse{\n// fallback\n}\n// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\n//Позволяет сразу проверить какие воркеры поддерживаются в браузере  \n","js",[99,100,101,114,120,126,135,141,146,152,197,237,258],"code",{"__ignoreMap":15},[102,103,106,110],"span",{"class":104,"line":105},"line",1,[102,107,109],{"class":108},"so5gQ","if",[102,111,113],{"class":112},"slsVL","(window.Worker){\n",[102,115,116],{"class":104,"line":25},[102,117,119],{"class":118},"sCsY4","// Инициация воркера\n",[102,121,123],{"class":104,"line":122},3,[102,124,125],{"class":112},"}\n",[102,127,129,132],{"class":104,"line":128},4,[102,130,131],{"class":108},"else",[102,133,134],{"class":112},"{\n",[102,136,138],{"class":104,"line":137},5,[102,139,140],{"class":118},"// fallback\n",[102,142,144],{"class":104,"line":143},6,[102,145,125],{"class":112},[102,147,149],{"class":104,"line":148},7,[102,150,151],{"class":118},"// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\n",[102,153,155,158,161,165,168,171,174,177,181,184,187,190,194],{"class":104,"line":154},8,[102,156,157],{"class":108},"export",[102,159,160],{"class":108}," const",[102,162,164],{"class":163},"suiK_"," IS_SERVICE_WORKER",[102,166,167],{"class":108}," =",[102,169,170],{"class":108}," typeof",[102,172,173],{"class":112}," ServiceWorkerGlobalScope ",[102,175,176],{"class":108},"!==",[102,178,180],{"class":179},"sfrk1"," 'undefined'",[102,182,183],{"class":108}," &&",[102,185,186],{"class":112}," self ",[102,188,189],{"class":108},"instanceof",[102,191,193],{"class":192},"shcOC"," ServiceWorkerGlobalScope",[102,195,196],{"class":112},";\n",[102,198,200,202,204,207,209,211,214,216,218,220,222,224,227,229,232,235],{"class":104,"line":199},9,[102,201,157],{"class":108},[102,203,160],{"class":108},[102,205,206],{"class":163}," IS_WEB_WORKER",[102,208,167],{"class":108},[102,210,170],{"class":108},[102,212,213],{"class":112}," WorkerGlobalScope ",[102,215,176],{"class":108},[102,217,180],{"class":179},[102,219,183],{"class":108},[102,221,186],{"class":112},[102,223,189],{"class":108},[102,225,226],{"class":192}," WorkerGlobalScope",[102,228,183],{"class":108},[102,230,231],{"class":108}," !",[102,233,234],{"class":163},"IS_SERVICE_WORKER",[102,236,196],{"class":112},[102,238,240,242,244,247,249,251,254,256],{"class":104,"line":239},10,[102,241,157],{"class":108},[102,243,160],{"class":108},[102,245,246],{"class":163}," IS_WORKER",[102,248,167],{"class":108},[102,250,206],{"class":163},[102,252,253],{"class":108}," ||",[102,255,164],{"class":163},[102,257,196],{"class":112},[102,259,261],{"class":104,"line":260},11,[102,262,263],{"class":118},"//Позволяет сразу проверить какие воркеры поддерживаются в браузере\n",[43,265,267],{"id":266},"типизация-web-workers-с-typescript","Типизация Web Workers с TypeScript",[269,270,271,282,289],"ol",{},[59,272,273,274,277,278,281],{},"Определите интерфейсы для сообщений (например, ",[99,275,276],{},"WorkerMessage"," для входящих и ",[99,279,280],{},"WorkerResponse"," для исходящих).",[59,283,284,285,288],{},"Используйте ",[99,286,287],{},"Worker"," как тип для экземпляра worker'а.",[59,290,291,292],{},"Типизируйте обработчики событий с ",[99,293,294],{},"MessageEvent",[17,296,297],{},"Основные шаги:",[93,299,302],{"className":95,"code":300,"filename":301,"language":97,"meta":15,"style":15},"export interface WorkerMessage {\n  type: 'compute';\n  data: number[]; // Массив чисел для обработки\n}\n\nexport interface WorkerResponse {\n  type: 'result';\n  result: number; // Результат вычислений\n}\n","worker-types.ts",[99,303,304,317,331,347,351,356,367,378,393],{"__ignoreMap":15},[102,305,306,308,311,314],{"class":104,"line":105},[102,307,157],{"class":108},[102,309,310],{"class":108}," interface",[102,312,313],{"class":192}," WorkerMessage",[102,315,316],{"class":112}," {\n",[102,318,319,323,326,329],{"class":104,"line":25},[102,320,322],{"class":321},"sQHwn","  type",[102,324,325],{"class":108},":",[102,327,328],{"class":179}," 'compute'",[102,330,196],{"class":112},[102,332,333,336,338,341,344],{"class":104,"line":122},[102,334,335],{"class":321},"  data",[102,337,325],{"class":108},[102,339,340],{"class":163}," number",[102,342,343],{"class":112},"[]; ",[102,345,346],{"class":118},"// Массив чисел для обработки\n",[102,348,349],{"class":104,"line":128},[102,350,125],{"class":112},[102,352,353],{"class":104,"line":137},[102,354,355],{"emptyLinePlaceholder":30},"\n",[102,357,358,360,362,365],{"class":104,"line":143},[102,359,157],{"class":108},[102,361,310],{"class":108},[102,363,364],{"class":192}," WorkerResponse",[102,366,316],{"class":112},[102,368,369,371,373,376],{"class":104,"line":148},[102,370,322],{"class":321},[102,372,325],{"class":108},[102,374,375],{"class":179}," 'result'",[102,377,196],{"class":112},[102,379,380,383,385,387,390],{"class":104,"line":154},[102,381,382],{"class":321},"  result",[102,384,325],{"class":108},[102,386,340],{"class":163},[102,388,389],{"class":112},"; ",[102,391,392],{"class":118},"// Результат вычислений\n",[102,394,395],{"class":104,"line":199},[102,396,125],{"class":112},[43,398,400],{"id":399},"создание-web-worker-в-vue","Создание Web Worker в Vue",[17,402,403],{},"В Vue.js Web Workers создаются как отдельные файлы (например, my-worker.ts), которые импортируются в компоненты. Vue не имеет встроенной поддержки Workers, но их легко интегрировать.",[17,405,406],{},"Шаги по созданию:",[269,408,409,416,423],{},[59,410,411,412,415],{},"Создайте файл worker'а в директории ",[99,413,414],{},"src/workers/"," (или любой другой).",[59,417,418,419,422],{},"В файле worker'а обработайте сообщения с помощью ",[99,420,421],{},"self.onmessage",".",[59,424,425,426,429],{},"В Vue-компоненте создайте экземпляр new ",[99,427,428],{},"Worker()"," с путём к файлу.",[17,431,432],{},"Важно: Если вы используете Vite (стандартный бандлер для Vue 3), добавьте ?worker в импорт, чтобы Vite правильно обработал worker как отдельный чанк.",[17,434,435,436,439],{},"Пример файла worker'а ",[99,437,438],{},"src/workers/sum-worker.ts","):",[93,441,444],{"className":95,"code":442,"filename":443,"language":97,"meta":15,"style":15},"import type { WorkerMessage, WorkerResponse } from '../types/worker-types';\n\nself.onmessage = (event: MessageEvent\u003CWorkerMessage>) => {\n  if (event.data.type === 'compute') {\n    const sum = event.data.data.reduce((acc, val) => acc + val, 0);\n    const response: WorkerResponse = { type: 'result', result: sum };\n    self.postMessage(response);\n  }\n};\n","sum-worker.ts",[99,445,446,465,469,503,519,567,589,600,605],{"__ignoreMap":15},[102,447,448,451,454,457,460,463],{"class":104,"line":105},[102,449,450],{"class":108},"import",[102,452,453],{"class":108}," type",[102,455,456],{"class":112}," { WorkerMessage, WorkerResponse } ",[102,458,459],{"class":108},"from",[102,461,462],{"class":179}," '../types/worker-types'",[102,464,196],{"class":112},[102,466,467],{"class":104,"line":25},[102,468,355],{"emptyLinePlaceholder":30},[102,470,471,474,477,479,482,485,487,490,493,495,498,501],{"class":104,"line":122},[102,472,473],{"class":112},"self.",[102,475,476],{"class":192},"onmessage",[102,478,167],{"class":108},[102,480,481],{"class":112}," (",[102,483,484],{"class":321},"event",[102,486,325],{"class":108},[102,488,489],{"class":192}," MessageEvent",[102,491,492],{"class":112},"\u003C",[102,494,276],{"class":192},[102,496,497],{"class":112},">) ",[102,499,500],{"class":108},"=>",[102,502,316],{"class":112},[102,504,505,508,511,514,516],{"class":104,"line":128},[102,506,507],{"class":108},"  if",[102,509,510],{"class":112}," (event.data.type ",[102,512,513],{"class":108},"===",[102,515,328],{"class":179},[102,517,518],{"class":112},") {\n",[102,520,521,524,527,529,532,535,538,541,544,547,550,552,555,558,561,564],{"class":104,"line":137},[102,522,523],{"class":108},"    const",[102,525,526],{"class":163}," sum",[102,528,167],{"class":108},[102,530,531],{"class":112}," event.data.data.",[102,533,534],{"class":192},"reduce",[102,536,537],{"class":112},"((",[102,539,540],{"class":321},"acc",[102,542,543],{"class":112},", ",[102,545,546],{"class":321},"val",[102,548,549],{"class":112},") ",[102,551,500],{"class":108},[102,553,554],{"class":112}," acc ",[102,556,557],{"class":108},"+",[102,559,560],{"class":112}," val, ",[102,562,563],{"class":163},"0",[102,565,566],{"class":112},");\n",[102,568,569,571,574,576,578,580,583,586],{"class":104,"line":143},[102,570,523],{"class":108},[102,572,573],{"class":163}," response",[102,575,325],{"class":108},[102,577,364],{"class":192},[102,579,167],{"class":108},[102,581,582],{"class":112}," { type: ",[102,584,585],{"class":179},"'result'",[102,587,588],{"class":112},", result: sum };\n",[102,590,591,594,597],{"class":104,"line":148},[102,592,593],{"class":112},"    self.",[102,595,596],{"class":192},"postMessage",[102,598,599],{"class":112},"(response);\n",[102,601,602],{"class":104,"line":154},[102,603,604],{"class":112},"  }\n",[102,606,607],{"class":104,"line":199},[102,608,609],{"class":112},"};\n",[17,611,612],{},"Этот worker будет суммирует массив чисел в фоне.",[43,614,616],{"id":615},"передача-данных-в-web-workers-копирование-vs-transfer","Передача данных в Web Workers: Копирование vs. Transfer",[17,618,619],{},"При передаче данных в Web Worker через postMessage обычные данные (например, объекты, массивы, строки) копируются с помощью алгоритма structured clone. Это означает, что создаётся глубокая копия данных, что может быть ресурсоёмким для больших объёмов информации, но позволяет обоим потокам работать с данными независимо.",[17,621,622],{},"Однако для \"битовых\" данных, таких как ArrayBuffer, TypedArray (например, Float32Array) или другие transferable объекты (MessagePort, ImageBitmap и т.д.), можно использовать опцию transfer. В этом случае данные не копируются, а передаются: владение объектом переходит к worker'у, и он становится недоступным в основном потоке. Это экономит память и время, особенно для больших буферов данных (например, аудио или видео).",[17,624,625],{},"Пример передачи с transfer:",[93,627,629],{"className":95,"code":628,"language":97,"meta":15,"style":15},"// В основном потоке\nconst buffer = new Float32Array(1000000); // Большой буфер\nworker.postMessage({ type: 'process', buffer }, [buffer]); // Передаём buffer без копирования\n\n// В worker'е\nself.onmessage = (event) => {\n  const buffer = event.data.buffer; // Теперь buffer доступен только здесь\n  // Обработка...\n};\n",[99,630,631,636,664,683,687,692,710,725,730],{"__ignoreMap":15},[102,632,633],{"class":104,"line":105},[102,634,635],{"class":118},"// В основном потоке\n",[102,637,638,641,644,646,649,652,655,658,661],{"class":104,"line":25},[102,639,640],{"class":108},"const",[102,642,643],{"class":163}," buffer",[102,645,167],{"class":108},[102,647,648],{"class":108}," new",[102,650,651],{"class":192}," Float32Array",[102,653,654],{"class":112},"(",[102,656,657],{"class":163},"1000000",[102,659,660],{"class":112},"); ",[102,662,663],{"class":118},"// Большой буфер\n",[102,665,666,669,671,674,677,680],{"class":104,"line":122},[102,667,668],{"class":112},"worker.",[102,670,596],{"class":192},[102,672,673],{"class":112},"({ type: ",[102,675,676],{"class":179},"'process'",[102,678,679],{"class":112},", buffer }, [buffer]); ",[102,681,682],{"class":118},"// Передаём buffer без копирования\n",[102,684,685],{"class":104,"line":128},[102,686,355],{"emptyLinePlaceholder":30},[102,688,689],{"class":104,"line":137},[102,690,691],{"class":118},"// В worker'е\n",[102,693,694,696,698,700,702,704,706,708],{"class":104,"line":143},[102,695,473],{"class":112},[102,697,476],{"class":192},[102,699,167],{"class":108},[102,701,481],{"class":112},[102,703,484],{"class":321},[102,705,549],{"class":112},[102,707,500],{"class":108},[102,709,316],{"class":112},[102,711,712,715,717,719,722],{"class":104,"line":148},[102,713,714],{"class":108},"  const",[102,716,643],{"class":163},[102,718,167],{"class":108},[102,720,721],{"class":112}," event.data.buffer; ",[102,723,724],{"class":118},"// Теперь buffer доступен только здесь\n",[102,726,727],{"class":104,"line":154},[102,728,729],{"class":118},"  // Обработка...\n",[102,731,732],{"class":104,"line":199},[102,733,609],{"class":112},[17,735,736],{},"Если не использовать transfer для transferable объектов, они всё равно скопируются, но transfer оптимизирует процесс. Это особенно полезно в сценариях с реал-тайм обработкой данных, как в проекте TunA с аудио-буферами. Данный способ используется в веб версии телеграмма для обработки WAV форматов и видео форматов.",[43,738,740],{"id":739},"обход-троттлинга-таймеров-с-помощью-web-workers","Обход троттлинга таймеров с помощью Web Workers",[17,742,743],{},"В браузерах функции setTimeout и setInterval в основном потоке подвержены троттлингу (throttling) в неактивных вкладках (background tabs). Это сделано для экономии ресурсов CPU и батареи: если вкладка не видима, браузер может увеличивать минимальный интервал таймера до 1 секунды или больше. Со временем троттлинг усиливается — интервал может расти до 2 секунд, 3 секунд и т.д., что приводит к неточным срабатываниям. Это проблема для приложений, требующих точного тайминга, таких как реал-тайм обновления, анимации или мониторинг.",[17,745,746],{},"Однако, если вынести таймеры в Web Worker, они продолжают работать с высокой точностью, независимо от активности вкладки. Workers не зависят от видимости страницы и не подвержены такому троттлингу, обеспечивая постоянные и точные интервалы. Это делает их идеальными для фоновых задач, требующих стабильного расписания.",[17,748,749],{},"Пример в worker'е для точного таймера:",[93,751,754],{"className":95,"code":752,"filename":753,"language":97,"meta":15,"style":15},"self.onmessage = (event) => {\n  if (event.data === 'start') {\n    setInterval(() => {\n      self.postMessage('tick'); // Отправляем сигнал каждую секунду точно\n    }, 1000);\n  }\n};\n","timer-worker.ts",[99,755,756,774,788,800,817,827,831],{"__ignoreMap":15},[102,757,758,760,762,764,766,768,770,772],{"class":104,"line":105},[102,759,473],{"class":112},[102,761,476],{"class":192},[102,763,167],{"class":108},[102,765,481],{"class":112},[102,767,484],{"class":321},[102,769,549],{"class":112},[102,771,500],{"class":108},[102,773,316],{"class":112},[102,775,776,778,781,783,786],{"class":104,"line":25},[102,777,507],{"class":108},[102,779,780],{"class":112}," (event.data ",[102,782,513],{"class":108},[102,784,785],{"class":179}," 'start'",[102,787,518],{"class":112},[102,789,790,793,796,798],{"class":104,"line":122},[102,791,792],{"class":192},"    setInterval",[102,794,795],{"class":112},"(() ",[102,797,500],{"class":108},[102,799,316],{"class":112},[102,801,802,805,807,809,812,814],{"class":104,"line":128},[102,803,804],{"class":112},"      self.",[102,806,596],{"class":192},[102,808,654],{"class":112},[102,810,811],{"class":179},"'tick'",[102,813,660],{"class":112},[102,815,816],{"class":118},"// Отправляем сигнал каждую секунду точно\n",[102,818,819,822,825],{"class":104,"line":137},[102,820,821],{"class":112},"    }, ",[102,823,824],{"class":163},"1000",[102,826,566],{"class":112},[102,828,829],{"class":104,"line":143},[102,830,604],{"class":112},[102,832,833],{"class":104,"line":148},[102,834,609],{"class":112},[17,836,837],{},"В основном потоке слушайте сообщения от worker'а для обработки \"тиков\". Это решает проблему в сценариях, где точность критична, например, в часах, уведомлениях или реал-тайм данных.",[43,839,841],{"id":840},"использование-web-worker-в-vue-компоненте","Использование Web Worker в Vue-компоненте",[17,843,844],{},"Механизм работы достаточно схож с WebSocket.",[269,846,847,850,853,858,864],{},[59,848,849],{},"Импортируйте worker.",[59,851,852],{},"Создайте экземпляр.",[59,854,855,856,422],{},"Отправляйте сообщения с ",[99,857,596],{},[59,859,860,861,863],{},"Обработайте ответы с ",[99,862,476],{}," .",[59,865,866,867,870,871,874],{},"Не забудьте завершить worker с ",[99,868,869],{},"terminate()",", когда он не нужен (например, в ",[99,872,873],{},"onUnmounted",") чтобы избежать memory leaks.",[17,876,877],{},"Тут представлен механиз работы, не самый чистый но достаточно понятный.",[93,879,883],{"className":880,"code":881,"language":882,"meta":15,"style":15},"language-vue shiki shiki-themes github-light github-dark github-dark","\u003Ctemplate>\n  \u003Cdiv>\n    \u003Cbutton @click=\"computeSum\">Вычислить сумму\u003C/button>\n    \u003Cp>Результат: {{ result }}\u003C/p>\n  \u003C/div>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue';\nimport type { WorkerMessage, WorkerResponse } from './types/worker-types';\n// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\nconst WorkerConstructor = () => new Worker(new URL('./workers/sum-worker.ts', import.meta.url), { type: 'module' });\n// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\nconst worker = WorkerConstructor();\nconst result = ref\u003Cnumber | null>(null);\n\n// ждем ответа от воркера\nworker.onmessage = (event: MessageEvent\u003CWorkerResponse>) => {\n  if (event.data.type === 'result') {\n    result.value = event.data.result;\n  }\n};\n// отправляем данные для подсчета\nconst computeSum = () => {\n  const data: number[] = Array.from({ length: 1000000 }, () => Math.random() * 100);\n  const message: WorkerMessage = { type: 'compute', data };\n  worker.postMessage(message);\n};\n// отчищаем память\nonUnmounted(() => {\n  worker.terminate();\n});\n\u003C/script>\n","vue",[99,884,885,895,905,937,950,959,968,988,1002,1017,1022,1072,1078,1093,1125,1130,1136,1163,1176,1187,1192,1197,1203,1219,1268,1290,1301,1306,1312,1323,1333,1339],{"__ignoreMap":15},[102,886,887,889,892],{"class":104,"line":105},[102,888,492],{"class":112},[102,890,13],{"class":891},"sByVh",[102,893,894],{"class":112},">\n",[102,896,897,900,903],{"class":104,"line":25},[102,898,899],{"class":112},"  \u003C",[102,901,902],{"class":891},"div",[102,904,894],{"class":112},[102,906,907,910,913,916,919,922,925,928,930,933,935],{"class":104,"line":122},[102,908,909],{"class":112},"    \u003C",[102,911,912],{"class":891},"button",[102,914,915],{"class":112}," @",[102,917,918],{"class":192},"click",[102,920,921],{"class":112},"=",[102,923,924],{"class":179},"\"",[102,926,927],{"class":112},"computeSum",[102,929,924],{"class":179},[102,931,932],{"class":112},">Вычислить сумму\u003C/",[102,934,912],{"class":891},[102,936,894],{"class":112},[102,938,939,941,943,946,948],{"class":104,"line":128},[102,940,909],{"class":112},[102,942,17],{"class":891},[102,944,945],{"class":112},">Результат: {{ result }}\u003C/",[102,947,17],{"class":891},[102,949,894],{"class":112},[102,951,952,955,957],{"class":104,"line":137},[102,953,954],{"class":112},"  \u003C/",[102,956,902],{"class":891},[102,958,894],{"class":112},[102,960,961,964,966],{"class":104,"line":143},[102,962,963],{"class":112},"\u003C/",[102,965,13],{"class":891},[102,967,894],{"class":112},[102,969,970,972,975,978,981,983,986],{"class":104,"line":148},[102,971,492],{"class":112},[102,973,974],{"class":891},"script",[102,976,977],{"class":192}," setup",[102,979,980],{"class":192}," lang",[102,982,921],{"class":112},[102,984,985],{"class":179},"\"ts\"",[102,987,894],{"class":112},[102,989,990,992,995,997,1000],{"class":104,"line":154},[102,991,450],{"class":108},[102,993,994],{"class":112}," { ref, onUnmounted } ",[102,996,459],{"class":108},[102,998,999],{"class":179}," 'vue'",[102,1001,196],{"class":112},[102,1003,1004,1006,1008,1010,1012,1015],{"class":104,"line":199},[102,1005,450],{"class":108},[102,1007,453],{"class":108},[102,1009,456],{"class":112},[102,1011,459],{"class":108},[102,1013,1014],{"class":179}," './types/worker-types'",[102,1016,196],{"class":112},[102,1018,1019],{"class":104,"line":239},[102,1020,1021],{"class":118},"// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\n",[102,1023,1024,1026,1029,1031,1034,1036,1038,1041,1043,1046,1049,1051,1054,1056,1058,1060,1063,1066,1069],{"class":104,"line":260},[102,1025,640],{"class":108},[102,1027,1028],{"class":192}," WorkerConstructor",[102,1030,167],{"class":108},[102,1032,1033],{"class":112}," () ",[102,1035,500],{"class":108},[102,1037,648],{"class":108},[102,1039,1040],{"class":192}," Worker",[102,1042,654],{"class":112},[102,1044,1045],{"class":108},"new",[102,1047,1048],{"class":192}," URL",[102,1050,654],{"class":112},[102,1052,1053],{"class":179},"'./workers/sum-worker.ts'",[102,1055,543],{"class":112},[102,1057,450],{"class":108},[102,1059,422],{"class":112},[102,1061,1062],{"class":163},"meta",[102,1064,1065],{"class":112},".url), { type: ",[102,1067,1068],{"class":179},"'module'",[102,1070,1071],{"class":112}," });\n",[102,1073,1075],{"class":104,"line":1074},12,[102,1076,1077],{"class":118},"// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\n",[102,1079,1081,1083,1086,1088,1090],{"class":104,"line":1080},13,[102,1082,640],{"class":108},[102,1084,1085],{"class":163}," worker",[102,1087,167],{"class":108},[102,1089,1028],{"class":192},[102,1091,1092],{"class":112},"();\n",[102,1094,1096,1098,1101,1103,1106,1108,1111,1114,1117,1120,1123],{"class":104,"line":1095},14,[102,1097,640],{"class":108},[102,1099,1100],{"class":163}," result",[102,1102,167],{"class":108},[102,1104,1105],{"class":192}," ref",[102,1107,492],{"class":112},[102,1109,1110],{"class":163},"number",[102,1112,1113],{"class":108}," |",[102,1115,1116],{"class":163}," null",[102,1118,1119],{"class":112},">(",[102,1121,1122],{"class":163},"null",[102,1124,566],{"class":112},[102,1126,1128],{"class":104,"line":1127},15,[102,1129,355],{"emptyLinePlaceholder":30},[102,1131,1133],{"class":104,"line":1132},16,[102,1134,1135],{"class":118},"// ждем ответа от воркера\n",[102,1137,1139,1141,1143,1145,1147,1149,1151,1153,1155,1157,1159,1161],{"class":104,"line":1138},17,[102,1140,668],{"class":112},[102,1142,476],{"class":192},[102,1144,167],{"class":108},[102,1146,481],{"class":112},[102,1148,484],{"class":321},[102,1150,325],{"class":108},[102,1152,489],{"class":192},[102,1154,492],{"class":112},[102,1156,280],{"class":192},[102,1158,497],{"class":112},[102,1160,500],{"class":108},[102,1162,316],{"class":112},[102,1164,1166,1168,1170,1172,1174],{"class":104,"line":1165},18,[102,1167,507],{"class":108},[102,1169,510],{"class":112},[102,1171,513],{"class":108},[102,1173,375],{"class":179},[102,1175,518],{"class":112},[102,1177,1179,1182,1184],{"class":104,"line":1178},19,[102,1180,1181],{"class":112},"    result.value ",[102,1183,921],{"class":108},[102,1185,1186],{"class":112}," event.data.result;\n",[102,1188,1190],{"class":104,"line":1189},20,[102,1191,604],{"class":112},[102,1193,1195],{"class":104,"line":1194},21,[102,1196,609],{"class":112},[102,1198,1200],{"class":104,"line":1199},22,[102,1201,1202],{"class":118},"// отправляем данные для подсчета\n",[102,1204,1206,1208,1211,1213,1215,1217],{"class":104,"line":1205},23,[102,1207,640],{"class":108},[102,1209,1210],{"class":192}," computeSum",[102,1212,167],{"class":108},[102,1214,1033],{"class":112},[102,1216,500],{"class":108},[102,1218,316],{"class":112},[102,1220,1222,1224,1227,1229,1231,1234,1236,1239,1241,1244,1246,1249,1251,1254,1257,1260,1263,1266],{"class":104,"line":1221},24,[102,1223,714],{"class":108},[102,1225,1226],{"class":163}," data",[102,1228,325],{"class":108},[102,1230,340],{"class":163},[102,1232,1233],{"class":112},"[] ",[102,1235,921],{"class":108},[102,1237,1238],{"class":112}," Array.",[102,1240,459],{"class":192},[102,1242,1243],{"class":112},"({ length: ",[102,1245,657],{"class":163},[102,1247,1248],{"class":112}," }, () ",[102,1250,500],{"class":108},[102,1252,1253],{"class":112}," Math.",[102,1255,1256],{"class":192},"random",[102,1258,1259],{"class":112},"() ",[102,1261,1262],{"class":108},"*",[102,1264,1265],{"class":163}," 100",[102,1267,566],{"class":112},[102,1269,1271,1273,1276,1278,1280,1282,1284,1287],{"class":104,"line":1270},25,[102,1272,714],{"class":108},[102,1274,1275],{"class":163}," message",[102,1277,325],{"class":108},[102,1279,313],{"class":192},[102,1281,167],{"class":108},[102,1283,582],{"class":112},[102,1285,1286],{"class":179},"'compute'",[102,1288,1289],{"class":112},", data };\n",[102,1291,1293,1296,1298],{"class":104,"line":1292},26,[102,1294,1295],{"class":112},"  worker.",[102,1297,596],{"class":192},[102,1299,1300],{"class":112},"(message);\n",[102,1302,1304],{"class":104,"line":1303},27,[102,1305,609],{"class":112},[102,1307,1309],{"class":104,"line":1308},28,[102,1310,1311],{"class":118},"// отчищаем память\n",[102,1313,1315,1317,1319,1321],{"class":104,"line":1314},29,[102,1316,873],{"class":192},[102,1318,795],{"class":112},[102,1320,500],{"class":108},[102,1322,316],{"class":112},[102,1324,1326,1328,1331],{"class":104,"line":1325},30,[102,1327,1295],{"class":112},[102,1329,1330],{"class":192},"terminate",[102,1332,1092],{"class":112},[102,1334,1336],{"class":104,"line":1335},31,[102,1337,1338],{"class":112},"});\n",[102,1340,1342,1344,1346],{"class":104,"line":1341},32,[102,1343,963],{"class":112},[102,1345,974],{"class":891},[102,1347,894],{"class":112},[43,1349,1351],{"id":1350},"реальный-кейс-проект-tuna","Реальный кейс: Проект TunA",[17,1353,1354],{},"В проекте TunA возникла проблема с производительностью и блокировкой UI из-за частых расчётов частоты (frequency calculations), даже при использовании debounce. Эти расчёты выполнялись в основном потоке, что приводило к \"зависаниям\" интерфейса, особенно при обработке реал-тайм данных или больших объёмов информации.",[17,1356,1357],{},"Чтобы решить эту проблему, было принято решение добавить Web Worker. Расчёты частоты были вынесены в отдельный поток, что позволило основному потоку оставаться свободным для рендеринга и обработки пользовательских взаимодействий. В результате UI стал более отзывчивым, а производительность значительно улучшилась. Это отличный пример, как Web Workers могут спасти проект от bottleneck'ов в реальных сценариях, связанных с интенсивными вычислениями.",[17,1359,1360],{},"Реализация вебворкера на этом проекте:",[93,1362,1365],{"className":95,"code":1363,"filename":1364,"language":97,"meta":15,"style":15},"import { PitchDetector } from \"pitchy\";\nimport { TUNER_CONFIG } from \"@/constants/tuner\";\nimport { PitchWorkerInput } from \"@/types/worker\";\n\nlet detector: PitchDetector\u003CFloat32Array> | null = null;\n\nconst isValidPitch = (pitch: number, clarity: number): boolean => {\n  return (\n    clarity > TUNER_CONFIG.MIN_CLARITY &&\n    pitch >= TUNER_CONFIG.MIN_FREQUENCY &&\n    pitch \u003C= TUNER_CONFIG.MAX_FREQUENCY\n  );\n};\n\nself.onmessage = (e: MessageEvent\u003CPitchWorkerInput>) => {\n  const { buffer, sampleRate } = e.data;\n\n  if (!detector) {\n    detector = PitchDetector.forFloat32Array(buffer.length);\n  }\n  const [pitch, clarity] = detector.findPitch(buffer, sampleRate);\n\n  if (isValidPitch(pitch, clarity)) {\n    self.postMessage({ pitch, clarity });\n  }\n};\n\n// Отчистка памяти\nself.onclose = () => {\n  detector = null;\n};\n","pitchWorker.ts",[99,1366,1367,1381,1395,1409,1413,1445,1449,1489,1497,1516,1533,1547,1552,1556,1560,1588,1611,1615,1627,1648,1652,1679,1683,1695,1704,1708,1712,1716,1721,1736,1747],{"__ignoreMap":15},[102,1368,1369,1371,1374,1376,1379],{"class":104,"line":105},[102,1370,450],{"class":108},[102,1372,1373],{"class":112}," { PitchDetector } ",[102,1375,459],{"class":108},[102,1377,1378],{"class":179}," \"pitchy\"",[102,1380,196],{"class":112},[102,1382,1383,1385,1388,1390,1393],{"class":104,"line":25},[102,1384,450],{"class":108},[102,1386,1387],{"class":112}," { TUNER_CONFIG } ",[102,1389,459],{"class":108},[102,1391,1392],{"class":179}," \"@/constants/tuner\"",[102,1394,196],{"class":112},[102,1396,1397,1399,1402,1404,1407],{"class":104,"line":122},[102,1398,450],{"class":108},[102,1400,1401],{"class":112}," { PitchWorkerInput } ",[102,1403,459],{"class":108},[102,1405,1406],{"class":179}," \"@/types/worker\"",[102,1408,196],{"class":112},[102,1410,1411],{"class":104,"line":128},[102,1412,355],{"emptyLinePlaceholder":30},[102,1414,1415,1418,1421,1423,1426,1428,1431,1434,1437,1439,1441,1443],{"class":104,"line":137},[102,1416,1417],{"class":108},"let",[102,1419,1420],{"class":112}," detector",[102,1422,325],{"class":108},[102,1424,1425],{"class":192}," PitchDetector",[102,1427,492],{"class":112},[102,1429,1430],{"class":192},"Float32Array",[102,1432,1433],{"class":112},"> ",[102,1435,1436],{"class":108},"|",[102,1438,1116],{"class":163},[102,1440,167],{"class":108},[102,1442,1116],{"class":163},[102,1444,196],{"class":112},[102,1446,1447],{"class":104,"line":143},[102,1448,355],{"emptyLinePlaceholder":30},[102,1450,1451,1453,1456,1458,1460,1463,1465,1467,1469,1472,1474,1476,1479,1481,1484,1487],{"class":104,"line":148},[102,1452,640],{"class":108},[102,1454,1455],{"class":192}," isValidPitch",[102,1457,167],{"class":108},[102,1459,481],{"class":112},[102,1461,1462],{"class":321},"pitch",[102,1464,325],{"class":108},[102,1466,340],{"class":163},[102,1468,543],{"class":112},[102,1470,1471],{"class":321},"clarity",[102,1473,325],{"class":108},[102,1475,340],{"class":163},[102,1477,1478],{"class":112},")",[102,1480,325],{"class":108},[102,1482,1483],{"class":163}," boolean",[102,1485,1486],{"class":108}," =>",[102,1488,316],{"class":112},[102,1490,1491,1494],{"class":104,"line":154},[102,1492,1493],{"class":108},"  return",[102,1495,1496],{"class":112}," (\n",[102,1498,1499,1502,1505,1508,1510,1513],{"class":104,"line":199},[102,1500,1501],{"class":112},"    clarity ",[102,1503,1504],{"class":108},">",[102,1506,1507],{"class":163}," TUNER_CONFIG",[102,1509,422],{"class":112},[102,1511,1512],{"class":163},"MIN_CLARITY",[102,1514,1515],{"class":108}," &&\n",[102,1517,1518,1521,1524,1526,1528,1531],{"class":104,"line":239},[102,1519,1520],{"class":112},"    pitch ",[102,1522,1523],{"class":108},">=",[102,1525,1507],{"class":163},[102,1527,422],{"class":112},[102,1529,1530],{"class":163},"MIN_FREQUENCY",[102,1532,1515],{"class":108},[102,1534,1535,1537,1540,1542,1544],{"class":104,"line":260},[102,1536,1520],{"class":112},[102,1538,1539],{"class":108},"\u003C=",[102,1541,1507],{"class":163},[102,1543,422],{"class":112},[102,1545,1546],{"class":163},"MAX_FREQUENCY\n",[102,1548,1549],{"class":104,"line":1074},[102,1550,1551],{"class":112},"  );\n",[102,1553,1554],{"class":104,"line":1080},[102,1555,609],{"class":112},[102,1557,1558],{"class":104,"line":1095},[102,1559,355],{"emptyLinePlaceholder":30},[102,1561,1562,1564,1566,1568,1570,1573,1575,1577,1579,1582,1584,1586],{"class":104,"line":1127},[102,1563,473],{"class":112},[102,1565,476],{"class":192},[102,1567,167],{"class":108},[102,1569,481],{"class":112},[102,1571,1572],{"class":321},"e",[102,1574,325],{"class":108},[102,1576,489],{"class":192},[102,1578,492],{"class":112},[102,1580,1581],{"class":192},"PitchWorkerInput",[102,1583,497],{"class":112},[102,1585,500],{"class":108},[102,1587,316],{"class":112},[102,1589,1590,1592,1595,1598,1600,1603,1606,1608],{"class":104,"line":1132},[102,1591,714],{"class":108},[102,1593,1594],{"class":112}," { ",[102,1596,1597],{"class":163},"buffer",[102,1599,543],{"class":112},[102,1601,1602],{"class":163},"sampleRate",[102,1604,1605],{"class":112}," } ",[102,1607,921],{"class":108},[102,1609,1610],{"class":112}," e.data;\n",[102,1612,1613],{"class":104,"line":1138},[102,1614,355],{"emptyLinePlaceholder":30},[102,1616,1617,1619,1621,1624],{"class":104,"line":1165},[102,1618,507],{"class":108},[102,1620,481],{"class":112},[102,1622,1623],{"class":108},"!",[102,1625,1626],{"class":112},"detector) {\n",[102,1628,1629,1632,1634,1637,1640,1643,1646],{"class":104,"line":1178},[102,1630,1631],{"class":112},"    detector ",[102,1633,921],{"class":108},[102,1635,1636],{"class":112}," PitchDetector.",[102,1638,1639],{"class":192},"forFloat32Array",[102,1641,1642],{"class":112},"(buffer.",[102,1644,1645],{"class":163},"length",[102,1647,566],{"class":112},[102,1649,1650],{"class":104,"line":1189},[102,1651,604],{"class":112},[102,1653,1654,1656,1659,1661,1663,1665,1668,1670,1673,1676],{"class":104,"line":1194},[102,1655,714],{"class":108},[102,1657,1658],{"class":112}," [",[102,1660,1462],{"class":163},[102,1662,543],{"class":112},[102,1664,1471],{"class":163},[102,1666,1667],{"class":112},"] ",[102,1669,921],{"class":108},[102,1671,1672],{"class":112}," detector.",[102,1674,1675],{"class":192},"findPitch",[102,1677,1678],{"class":112},"(buffer, sampleRate);\n",[102,1680,1681],{"class":104,"line":1199},[102,1682,355],{"emptyLinePlaceholder":30},[102,1684,1685,1687,1689,1692],{"class":104,"line":1205},[102,1686,507],{"class":108},[102,1688,481],{"class":112},[102,1690,1691],{"class":192},"isValidPitch",[102,1693,1694],{"class":112},"(pitch, clarity)) {\n",[102,1696,1697,1699,1701],{"class":104,"line":1221},[102,1698,593],{"class":112},[102,1700,596],{"class":192},[102,1702,1703],{"class":112},"({ pitch, clarity });\n",[102,1705,1706],{"class":104,"line":1270},[102,1707,604],{"class":112},[102,1709,1710],{"class":104,"line":1292},[102,1711,609],{"class":112},[102,1713,1714],{"class":104,"line":1303},[102,1715,355],{"emptyLinePlaceholder":30},[102,1717,1718],{"class":104,"line":1308},[102,1719,1720],{"class":118},"// Отчистка памяти\n",[102,1722,1723,1725,1728,1730,1732,1734],{"class":104,"line":1314},[102,1724,473],{"class":112},[102,1726,1727],{"class":192},"onclose",[102,1729,167],{"class":108},[102,1731,1033],{"class":112},[102,1733,500],{"class":108},[102,1735,316],{"class":112},[102,1737,1738,1741,1743,1745],{"class":104,"line":1325},[102,1739,1740],{"class":112},"  detector ",[102,1742,921],{"class":108},[102,1744,1116],{"class":163},[102,1746,196],{"class":112},[102,1748,1749],{"class":104,"line":1335},[102,1750,609],{"class":112},[17,1752,1753,1754,1757],{},"В этом примере worker обрабатывает аудио-буфер для определения pitch (частоты тона) с помощью библиотеки ",[99,1755,1756],{},"pitchy",", фильтруя результаты по валидности и отправляя только релевантные данные обратно в основной поток.",[43,1759,1761],{"id":1760},"преимущества-в-реальных-проектах","Преимущества в реальных проектах",[17,1763,1764],{},"В проектах Web Workers особенно полезны для:",[56,1766,1767,1770],{},[59,1768,1769],{},"Обработки больших данных (например, в дашбордах с графиками).",[59,1771,1772],{},"Реал-тайм приложений (чаты, игры), где нужно обрабатывать события без задержек.",[1774,1775,1776],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .sByVh, html code.shiki .sByVh{--shiki-light:#22863A;--shiki-default:#85E89D;--shiki-dark:#85E89D}",{"title":15,"searchDepth":25,"depth":25,"links":1778},[1779,1782,1783,1784,1785,1786,1787,1788],{"id":45,"depth":25,"text":46,"children":1780},[1781],{"id":87,"depth":122,"text":88},{"id":266,"depth":25,"text":267},{"id":399,"depth":25,"text":400},{"id":615,"depth":25,"text":616},{"id":739,"depth":25,"text":740},{"id":840,"depth":25,"text":841},{"id":1350,"depth":25,"text":1351},{"id":1760,"depth":25,"text":1761},"27/10/2025","В статье разберём Web Workers: их преимущества, типизацию в TypeScript, создание и использование в Vue.js",{"script":1792},[1793],{"type":1794,"key":1795,"data-nuxt-schema-org":30,"nodes":1796},"application/ld+json","schema-org-graph",[1797],{"_resolver":1798},"webPage","https://canvas.hrcd.fr/articles/launch-your-porfolio.jpg",{},{"title":1802},"Web Workers в Vue",{"props":1804},{},"/ru/articles/web-workers-v-vue","10",{"_resolver":1798},{"title":1802,"description":1790},{"loc":1805,"images":1810,"videos":1811},[],[],"ru/articles/Web Workers в Vue",[1814,1815,1816,1817,1818,15],"Vue","Typescript ","Performance ","Javascript ","Webworkers","DlxxJMdjOT_iiflYSNt79Unomh0FPjCtvKS9XYnOl-4",1761593250080]