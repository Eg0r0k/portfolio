[{"data":1,"prerenderedAt":1792},["ShallowReactive",2],{"/ru/articles/web-workers-v-vue":3},{"id":4,"title":5,"body":6,"date":1759,"description":1760,"extension":1761,"head":1762,"image":1770,"meta":1771,"navigation":1772,"ogImage":1774,"path":1776,"readingTime":1777,"robots":1778,"schemaOrg":1779,"seo":1780,"sitemap":1781,"stem":1784,"tags":1785,"__hash__":1791},"articles_ru/ru/articles/Web Workers в Vue.md","Web Workers в Vue: Создание, Типизация и Использование ",{"type":7,"value":8,"toc":1747},"minimark",[9,14,18,21,50,55,58,232,236,263,266,366,370,373,376,399,402,409,579,582,586,589,592,595,703,706,710,713,716,719,804,807,811,814,844,847,1318,1322,1325,1328,1331,1721,1728,1732,1735,1743],[10,11,13],"h2",{"id":12},"введение-в-web-workers","Введение в Web workers",[15,16,17],"p",{},"Web Workers — это мощный инструмент JavaScript, позволяющий выполнять скрипты в фоновом потоке, отдельно от основного потока браузера. Это означает, что тяжёлые вычисления, такие как обработка больших массивов данных, парсинг JSON или сложные математические операции, не будут блокировать пользовательский интерфейс (UI). В результате приложение остаётся отзывчивым, а пользователь не замечает \"зависаний\".",[15,19,20],{},"Почему Web Workers полезны для проектов?",[22,23,24,32,38,44],"ul",{},[25,26,27,31],"li",{},[28,29,30],"strong",{},"Улучшение производительности:"," Они позволяют распараллеливать задачи, что критично для приложений с интенсивными вычислениями (например, игры, анализ данных или реал-тайм обработка).",[25,33,34,37],{},[28,35,36],{},"Отзывчивость UI:"," Основной поток остаётся свободным для обработки событий, анимаций и рендеринга.",[25,39,40,43],{},[28,41,42],{},"Безопасность:"," Workers не имеют доступа к DOM, что предотвращает случайные мутации UI и делает код более предсказуемым.",[25,45,46,49],{},[28,47,48],{},"Масштабируемость:"," В больших проектах, таких как SPA на Vue, Workers помогают избежать bottleneck'ов в производительности.",[51,52,54],"h3",{"id":53},"проверка-поддержки-web-workers","Проверка поддержки Web Workers",[15,56,57],{},"Хоть и Webworker имеет большую поддержку браузерами документация MDN рекомендует перед использованием вебворкера проверять к нему доступ, и использовать fallback подсчета в основном потоке",[59,60,65],"pre",{"className":61,"code":62,"language":63,"meta":64,"style":64},"language-js shiki shiki-themes github-light github-dark github-dark","if(window.Worker){\n// Инициация воркера\n}\nelse{\n// fallback\n}\n// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\n//Позволяет сразу проверить какие воркеры поддерживаются в браузере  \n","js","",[66,67,68,81,88,94,103,109,114,120,165,205,226],"code",{"__ignoreMap":64},[69,70,73,77],"span",{"class":71,"line":72},"line",1,[69,74,76],{"class":75},"so5gQ","if",[69,78,80],{"class":79},"slsVL","(window.Worker){\n",[69,82,84],{"class":71,"line":83},2,[69,85,87],{"class":86},"sCsY4","// Инициация воркера\n",[69,89,91],{"class":71,"line":90},3,[69,92,93],{"class":79},"}\n",[69,95,97,100],{"class":71,"line":96},4,[69,98,99],{"class":75},"else",[69,101,102],{"class":79},"{\n",[69,104,106],{"class":71,"line":105},5,[69,107,108],{"class":86},"// fallback\n",[69,110,112],{"class":71,"line":111},6,[69,113,93],{"class":79},[69,115,117],{"class":71,"line":116},7,[69,118,119],{"class":86},"// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\n",[69,121,123,126,129,133,136,139,142,145,149,152,155,158,162],{"class":71,"line":122},8,[69,124,125],{"class":75},"export",[69,127,128],{"class":75}," const",[69,130,132],{"class":131},"suiK_"," IS_SERVICE_WORKER",[69,134,135],{"class":75}," =",[69,137,138],{"class":75}," typeof",[69,140,141],{"class":79}," ServiceWorkerGlobalScope ",[69,143,144],{"class":75},"!==",[69,146,148],{"class":147},"sfrk1"," 'undefined'",[69,150,151],{"class":75}," &&",[69,153,154],{"class":79}," self ",[69,156,157],{"class":75},"instanceof",[69,159,161],{"class":160},"shcOC"," ServiceWorkerGlobalScope",[69,163,164],{"class":79},";\n",[69,166,168,170,172,175,177,179,182,184,186,188,190,192,195,197,200,203],{"class":71,"line":167},9,[69,169,125],{"class":75},[69,171,128],{"class":75},[69,173,174],{"class":131}," IS_WEB_WORKER",[69,176,135],{"class":75},[69,178,138],{"class":75},[69,180,181],{"class":79}," WorkerGlobalScope ",[69,183,144],{"class":75},[69,185,148],{"class":147},[69,187,151],{"class":75},[69,189,154],{"class":79},[69,191,157],{"class":75},[69,193,194],{"class":160}," WorkerGlobalScope",[69,196,151],{"class":75},[69,198,199],{"class":75}," !",[69,201,202],{"class":131},"IS_SERVICE_WORKER",[69,204,164],{"class":79},[69,206,208,210,212,215,217,219,222,224],{"class":71,"line":207},10,[69,209,125],{"class":75},[69,211,128],{"class":75},[69,213,214],{"class":131}," IS_WORKER",[69,216,135],{"class":75},[69,218,174],{"class":131},[69,220,221],{"class":75}," ||",[69,223,132],{"class":131},[69,225,164],{"class":79},[69,227,229],{"class":71,"line":228},11,[69,230,231],{"class":86},"//Позволяет сразу проверить какие воркеры поддерживаются в браузере\n",[10,233,235],{"id":234},"типизация-web-workers-с-typescript","Типизация Web Workers с TypeScript",[237,238,239,250,257],"ol",{},[25,240,241,242,245,246,249],{},"Определите интерфейсы для сообщений (например, ",[66,243,244],{},"WorkerMessage"," для входящих и ",[66,247,248],{},"WorkerResponse"," для исходящих).",[25,251,252,253,256],{},"Используйте ",[66,254,255],{},"Worker"," как тип для экземпляра worker'а.",[25,258,259,260],{},"Типизируйте обработчики событий с ",[66,261,262],{},"MessageEvent",[15,264,265],{},"Основные шаги:",[59,267,270],{"className":61,"code":268,"filename":269,"language":63,"meta":64,"style":64},"export interface WorkerMessage {\n  type: 'compute';\n  data: number[]; // Массив чисел для обработки\n}\n\nexport interface WorkerResponse {\n  type: 'result';\n  result: number; // Результат вычислений\n}\n","worker-types.ts",[66,271,272,285,299,315,319,325,336,347,362],{"__ignoreMap":64},[69,273,274,276,279,282],{"class":71,"line":72},[69,275,125],{"class":75},[69,277,278],{"class":75}," interface",[69,280,281],{"class":160}," WorkerMessage",[69,283,284],{"class":79}," {\n",[69,286,287,291,294,297],{"class":71,"line":83},[69,288,290],{"class":289},"sQHwn","  type",[69,292,293],{"class":75},":",[69,295,296],{"class":147}," 'compute'",[69,298,164],{"class":79},[69,300,301,304,306,309,312],{"class":71,"line":90},[69,302,303],{"class":289},"  data",[69,305,293],{"class":75},[69,307,308],{"class":131}," number",[69,310,311],{"class":79},"[]; ",[69,313,314],{"class":86},"// Массив чисел для обработки\n",[69,316,317],{"class":71,"line":96},[69,318,93],{"class":79},[69,320,321],{"class":71,"line":105},[69,322,324],{"emptyLinePlaceholder":323},true,"\n",[69,326,327,329,331,334],{"class":71,"line":111},[69,328,125],{"class":75},[69,330,278],{"class":75},[69,332,333],{"class":160}," WorkerResponse",[69,335,284],{"class":79},[69,337,338,340,342,345],{"class":71,"line":116},[69,339,290],{"class":289},[69,341,293],{"class":75},[69,343,344],{"class":147}," 'result'",[69,346,164],{"class":79},[69,348,349,352,354,356,359],{"class":71,"line":122},[69,350,351],{"class":289},"  result",[69,353,293],{"class":75},[69,355,308],{"class":131},[69,357,358],{"class":79},"; ",[69,360,361],{"class":86},"// Результат вычислений\n",[69,363,364],{"class":71,"line":167},[69,365,93],{"class":79},[10,367,369],{"id":368},"создание-web-worker-в-vue","Создание Web Worker в Vue",[15,371,372],{},"В Vue.js Web Workers создаются как отдельные файлы (например, my-worker.ts), которые импортируются в компоненты. Vue не имеет встроенной поддержки Workers, но их легко интегрировать.",[15,374,375],{},"Шаги по созданию:",[237,377,378,385,392],{},[25,379,380,381,384],{},"Создайте файл worker'а в директории ",[66,382,383],{},"src/workers/"," (или любой другой).",[25,386,387,388,391],{},"В файле worker'а обработайте сообщения с помощью ",[66,389,390],{},"self.onmessage",".",[25,393,394,395,398],{},"В Vue-компоненте создайте экземпляр new ",[66,396,397],{},"Worker()"," с путём к файлу.",[15,400,401],{},"Важно: Если вы используете Vite (стандартный бандлер для Vue 3), добавьте ?worker в импорт, чтобы Vite правильно обработал worker как отдельный чанк.",[15,403,404,405,408],{},"Пример файла worker'а ",[66,406,407],{},"src/workers/sum-worker.ts","):",[59,410,413],{"className":61,"code":411,"filename":412,"language":63,"meta":64,"style":64},"import type { WorkerMessage, WorkerResponse } from '../types/worker-types';\n\nself.onmessage = (event: MessageEvent\u003CWorkerMessage>) => {\n  if (event.data.type === 'compute') {\n    const sum = event.data.data.reduce((acc, val) => acc + val, 0);\n    const response: WorkerResponse = { type: 'result', result: sum };\n    self.postMessage(response);\n  }\n};\n","sum-worker.ts",[66,414,415,434,438,472,488,536,558,569,574],{"__ignoreMap":64},[69,416,417,420,423,426,429,432],{"class":71,"line":72},[69,418,419],{"class":75},"import",[69,421,422],{"class":75}," type",[69,424,425],{"class":79}," { WorkerMessage, WorkerResponse } ",[69,427,428],{"class":75},"from",[69,430,431],{"class":147}," '../types/worker-types'",[69,433,164],{"class":79},[69,435,436],{"class":71,"line":83},[69,437,324],{"emptyLinePlaceholder":323},[69,439,440,443,446,448,451,454,456,459,462,464,467,470],{"class":71,"line":90},[69,441,442],{"class":79},"self.",[69,444,445],{"class":160},"onmessage",[69,447,135],{"class":75},[69,449,450],{"class":79}," (",[69,452,453],{"class":289},"event",[69,455,293],{"class":75},[69,457,458],{"class":160}," MessageEvent",[69,460,461],{"class":79},"\u003C",[69,463,244],{"class":160},[69,465,466],{"class":79},">) ",[69,468,469],{"class":75},"=>",[69,471,284],{"class":79},[69,473,474,477,480,483,485],{"class":71,"line":96},[69,475,476],{"class":75},"  if",[69,478,479],{"class":79}," (event.data.type ",[69,481,482],{"class":75},"===",[69,484,296],{"class":147},[69,486,487],{"class":79},") {\n",[69,489,490,493,496,498,501,504,507,510,513,516,519,521,524,527,530,533],{"class":71,"line":105},[69,491,492],{"class":75},"    const",[69,494,495],{"class":131}," sum",[69,497,135],{"class":75},[69,499,500],{"class":79}," event.data.data.",[69,502,503],{"class":160},"reduce",[69,505,506],{"class":79},"((",[69,508,509],{"class":289},"acc",[69,511,512],{"class":79},", ",[69,514,515],{"class":289},"val",[69,517,518],{"class":79},") ",[69,520,469],{"class":75},[69,522,523],{"class":79}," acc ",[69,525,526],{"class":75},"+",[69,528,529],{"class":79}," val, ",[69,531,532],{"class":131},"0",[69,534,535],{"class":79},");\n",[69,537,538,540,543,545,547,549,552,555],{"class":71,"line":111},[69,539,492],{"class":75},[69,541,542],{"class":131}," response",[69,544,293],{"class":75},[69,546,333],{"class":160},[69,548,135],{"class":75},[69,550,551],{"class":79}," { type: ",[69,553,554],{"class":147},"'result'",[69,556,557],{"class":79},", result: sum };\n",[69,559,560,563,566],{"class":71,"line":116},[69,561,562],{"class":79},"    self.",[69,564,565],{"class":160},"postMessage",[69,567,568],{"class":79},"(response);\n",[69,570,571],{"class":71,"line":122},[69,572,573],{"class":79},"  }\n",[69,575,576],{"class":71,"line":167},[69,577,578],{"class":79},"};\n",[15,580,581],{},"Этот worker будет суммирует массив чисел в фоне.",[10,583,585],{"id":584},"передача-данных-в-web-workers-копирование-vs-transfer","Передача данных в Web Workers: Копирование vs. Transfer",[15,587,588],{},"При передаче данных в Web Worker через postMessage обычные данные (например, объекты, массивы, строки) копируются с помощью алгоритма structured clone. Это означает, что создаётся глубокая копия данных, что может быть ресурсоёмким для больших объёмов информации, но позволяет обоим потокам работать с данными независимо.",[15,590,591],{},"Однако для \"битовых\" данных, таких как ArrayBuffer, TypedArray (например, Float32Array) или другие transferable объекты (MessagePort, ImageBitmap и т.д.), можно использовать опцию transfer. В этом случае данные не копируются, а передаются: владение объектом переходит к worker'у, и он становится недоступным в основном потоке. Это экономит память и время, особенно для больших буферов данных (например, аудио или видео).",[15,593,594],{},"Пример передачи с transfer:",[59,596,598],{"className":61,"code":597,"language":63,"meta":64,"style":64},"// В основном потоке\nconst buffer = new Float32Array(1000000); // Большой буфер\nworker.postMessage({ type: 'process', buffer }, [buffer]); // Передаём buffer без копирования\n\n// В worker'е\nself.onmessage = (event) => {\n  const buffer = event.data.buffer; // Теперь buffer доступен только здесь\n  // Обработка...\n};\n",[66,599,600,605,633,652,656,661,679,694,699],{"__ignoreMap":64},[69,601,602],{"class":71,"line":72},[69,603,604],{"class":86},"// В основном потоке\n",[69,606,607,610,613,615,618,621,624,627,630],{"class":71,"line":83},[69,608,609],{"class":75},"const",[69,611,612],{"class":131}," buffer",[69,614,135],{"class":75},[69,616,617],{"class":75}," new",[69,619,620],{"class":160}," Float32Array",[69,622,623],{"class":79},"(",[69,625,626],{"class":131},"1000000",[69,628,629],{"class":79},"); ",[69,631,632],{"class":86},"// Большой буфер\n",[69,634,635,638,640,643,646,649],{"class":71,"line":90},[69,636,637],{"class":79},"worker.",[69,639,565],{"class":160},[69,641,642],{"class":79},"({ type: ",[69,644,645],{"class":147},"'process'",[69,647,648],{"class":79},", buffer }, [buffer]); ",[69,650,651],{"class":86},"// Передаём buffer без копирования\n",[69,653,654],{"class":71,"line":96},[69,655,324],{"emptyLinePlaceholder":323},[69,657,658],{"class":71,"line":105},[69,659,660],{"class":86},"// В worker'е\n",[69,662,663,665,667,669,671,673,675,677],{"class":71,"line":111},[69,664,442],{"class":79},[69,666,445],{"class":160},[69,668,135],{"class":75},[69,670,450],{"class":79},[69,672,453],{"class":289},[69,674,518],{"class":79},[69,676,469],{"class":75},[69,678,284],{"class":79},[69,680,681,684,686,688,691],{"class":71,"line":116},[69,682,683],{"class":75},"  const",[69,685,612],{"class":131},[69,687,135],{"class":75},[69,689,690],{"class":79}," event.data.buffer; ",[69,692,693],{"class":86},"// Теперь buffer доступен только здесь\n",[69,695,696],{"class":71,"line":122},[69,697,698],{"class":86},"  // Обработка...\n",[69,700,701],{"class":71,"line":167},[69,702,578],{"class":79},[15,704,705],{},"Если не использовать transfer для transferable объектов, они всё равно скопируются, но transfer оптимизирует процесс. Это особенно полезно в сценариях с реал-тайм обработкой данных, как в проекте TunA с аудио-буферами. Данный способ используется в веб версии телеграмма для обработки WAV форматов и видео форматов.",[10,707,709],{"id":708},"обход-троттлинга-таймеров-с-помощью-web-workers","Обход троттлинга таймеров с помощью Web Workers",[15,711,712],{},"В браузерах функции setTimeout и setInterval в основном потоке подвержены троттлингу (throttling) в неактивных вкладках (background tabs). Это сделано для экономии ресурсов CPU и батареи: если вкладка не видима, браузер может увеличивать минимальный интервал таймера до 1 секунды или больше. Со временем троттлинг усиливается — интервал может расти до 2 секунд, 3 секунд и т.д., что приводит к неточным срабатываниям. Это проблема для приложений, требующих точного тайминга, таких как реал-тайм обновления, анимации или мониторинг.",[15,714,715],{},"Однако, если вынести таймеры в Web Worker, они продолжают работать с высокой точностью, независимо от активности вкладки. Workers не зависят от видимости страницы и не подвержены такому троттлингу, обеспечивая постоянные и точные интервалы. Это делает их идеальными для фоновых задач, требующих стабильного расписания.",[15,717,718],{},"Пример в worker'е для точного таймера:",[59,720,723],{"className":61,"code":721,"filename":722,"language":63,"meta":64,"style":64},"self.onmessage = (event) => {\n  if (event.data === 'start') {\n    setInterval(() => {\n      self.postMessage('tick'); // Отправляем сигнал каждую секунду точно\n    }, 1000);\n  }\n};\n","timer-worker.ts",[66,724,725,743,757,769,786,796,800],{"__ignoreMap":64},[69,726,727,729,731,733,735,737,739,741],{"class":71,"line":72},[69,728,442],{"class":79},[69,730,445],{"class":160},[69,732,135],{"class":75},[69,734,450],{"class":79},[69,736,453],{"class":289},[69,738,518],{"class":79},[69,740,469],{"class":75},[69,742,284],{"class":79},[69,744,745,747,750,752,755],{"class":71,"line":83},[69,746,476],{"class":75},[69,748,749],{"class":79}," (event.data ",[69,751,482],{"class":75},[69,753,754],{"class":147}," 'start'",[69,756,487],{"class":79},[69,758,759,762,765,767],{"class":71,"line":90},[69,760,761],{"class":160},"    setInterval",[69,763,764],{"class":79},"(() ",[69,766,469],{"class":75},[69,768,284],{"class":79},[69,770,771,774,776,778,781,783],{"class":71,"line":96},[69,772,773],{"class":79},"      self.",[69,775,565],{"class":160},[69,777,623],{"class":79},[69,779,780],{"class":147},"'tick'",[69,782,629],{"class":79},[69,784,785],{"class":86},"// Отправляем сигнал каждую секунду точно\n",[69,787,788,791,794],{"class":71,"line":105},[69,789,790],{"class":79},"    }, ",[69,792,793],{"class":131},"1000",[69,795,535],{"class":79},[69,797,798],{"class":71,"line":111},[69,799,573],{"class":79},[69,801,802],{"class":71,"line":116},[69,803,578],{"class":79},[15,805,806],{},"В основном потоке слушайте сообщения от worker'а для обработки \"тиков\". Это решает проблему в сценариях, где точность критична, например, в часах, уведомлениях или реал-тайм данных.",[10,808,810],{"id":809},"использование-web-worker-в-vue-компоненте","Использование Web Worker в Vue-компоненте",[15,812,813],{},"Механизм работы достаточно схож с WebSocket.",[237,815,816,819,822,827,833],{},[25,817,818],{},"Импортируйте worker.",[25,820,821],{},"Создайте экземпляр.",[25,823,824,825,391],{},"Отправляйте сообщения с ",[66,826,565],{},[25,828,829,830,832],{},"Обработайте ответы с ",[66,831,445],{}," .",[25,834,835,836,839,840,843],{},"Не забудьте завершить worker с ",[66,837,838],{},"terminate()",", когда он не нужен (например, в ",[66,841,842],{},"onUnmounted",") чтобы избежать memory leaks.",[15,845,846],{},"Тут представлен механиз работы, не самый чистый но достаточно понятный.",[59,848,852],{"className":849,"code":850,"language":851,"meta":64,"style":64},"language-vue shiki shiki-themes github-light github-dark github-dark","\u003Ctemplate>\n  \u003Cdiv>\n    \u003Cbutton @click=\"computeSum\">Вычислить сумму\u003C/button>\n    \u003Cp>Результат: {{ result }}\u003C/p>\n  \u003C/div>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue';\nimport type { WorkerMessage, WorkerResponse } from './types/worker-types';\n// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\nconst WorkerConstructor = () => new Worker(new URL('./workers/sum-worker.ts', import.meta.url), { type: 'module' });\n// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\nconst worker = WorkerConstructor();\nconst result = ref\u003Cnumber | null>(null);\n\n// ждем ответа от воркера\nworker.onmessage = (event: MessageEvent\u003CWorkerResponse>) => {\n  if (event.data.type === 'result') {\n    result.value = event.data.result;\n  }\n};\n// отправляем данные для подсчета\nconst computeSum = () => {\n  const data: number[] = Array.from({ length: 1000000 }, () => Math.random() * 100);\n  const message: WorkerMessage = { type: 'compute', data };\n  worker.postMessage(message);\n};\n// отчищаем память\nonUnmounted(() => {\n  worker.terminate();\n});\n\u003C/script>\n","vue",[66,853,854,865,875,907,920,929,938,958,972,987,992,1042,1048,1063,1095,1100,1106,1133,1146,1157,1162,1167,1173,1189,1238,1260,1271,1276,1282,1293,1303,1309],{"__ignoreMap":64},[69,855,856,858,862],{"class":71,"line":72},[69,857,461],{"class":79},[69,859,861],{"class":860},"sByVh","template",[69,863,864],{"class":79},">\n",[69,866,867,870,873],{"class":71,"line":83},[69,868,869],{"class":79},"  \u003C",[69,871,872],{"class":860},"div",[69,874,864],{"class":79},[69,876,877,880,883,886,889,892,895,898,900,903,905],{"class":71,"line":90},[69,878,879],{"class":79},"    \u003C",[69,881,882],{"class":860},"button",[69,884,885],{"class":79}," @",[69,887,888],{"class":160},"click",[69,890,891],{"class":79},"=",[69,893,894],{"class":147},"\"",[69,896,897],{"class":79},"computeSum",[69,899,894],{"class":147},[69,901,902],{"class":79},">Вычислить сумму\u003C/",[69,904,882],{"class":860},[69,906,864],{"class":79},[69,908,909,911,913,916,918],{"class":71,"line":96},[69,910,879],{"class":79},[69,912,15],{"class":860},[69,914,915],{"class":79},">Результат: {{ result }}\u003C/",[69,917,15],{"class":860},[69,919,864],{"class":79},[69,921,922,925,927],{"class":71,"line":105},[69,923,924],{"class":79},"  \u003C/",[69,926,872],{"class":860},[69,928,864],{"class":79},[69,930,931,934,936],{"class":71,"line":111},[69,932,933],{"class":79},"\u003C/",[69,935,861],{"class":860},[69,937,864],{"class":79},[69,939,940,942,945,948,951,953,956],{"class":71,"line":116},[69,941,461],{"class":79},[69,943,944],{"class":860},"script",[69,946,947],{"class":160}," setup",[69,949,950],{"class":160}," lang",[69,952,891],{"class":79},[69,954,955],{"class":147},"\"ts\"",[69,957,864],{"class":79},[69,959,960,962,965,967,970],{"class":71,"line":122},[69,961,419],{"class":75},[69,963,964],{"class":79}," { ref, onUnmounted } ",[69,966,428],{"class":75},[69,968,969],{"class":147}," 'vue'",[69,971,164],{"class":79},[69,973,974,976,978,980,982,985],{"class":71,"line":167},[69,975,419],{"class":75},[69,977,422],{"class":75},[69,979,425],{"class":79},[69,981,428],{"class":75},[69,983,984],{"class":147}," './types/worker-types'",[69,986,164],{"class":79},[69,988,989],{"class":71,"line":207},[69,990,991],{"class":86},"// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\n",[69,993,994,996,999,1001,1004,1006,1008,1011,1013,1016,1019,1021,1024,1026,1028,1030,1033,1036,1039],{"class":71,"line":228},[69,995,609],{"class":75},[69,997,998],{"class":160}," WorkerConstructor",[69,1000,135],{"class":75},[69,1002,1003],{"class":79}," () ",[69,1005,469],{"class":75},[69,1007,617],{"class":75},[69,1009,1010],{"class":160}," Worker",[69,1012,623],{"class":79},[69,1014,1015],{"class":75},"new",[69,1017,1018],{"class":160}," URL",[69,1020,623],{"class":79},[69,1022,1023],{"class":147},"'./workers/sum-worker.ts'",[69,1025,512],{"class":79},[69,1027,419],{"class":75},[69,1029,391],{"class":79},[69,1031,1032],{"class":131},"meta",[69,1034,1035],{"class":79},".url), { type: ",[69,1037,1038],{"class":147},"'module'",[69,1040,1041],{"class":79}," });\n",[69,1043,1045],{"class":71,"line":1044},12,[69,1046,1047],{"class":86},"// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\n",[69,1049,1051,1053,1056,1058,1060],{"class":71,"line":1050},13,[69,1052,609],{"class":75},[69,1054,1055],{"class":131}," worker",[69,1057,135],{"class":75},[69,1059,998],{"class":160},[69,1061,1062],{"class":79},"();\n",[69,1064,1066,1068,1071,1073,1076,1078,1081,1084,1087,1090,1093],{"class":71,"line":1065},14,[69,1067,609],{"class":75},[69,1069,1070],{"class":131}," result",[69,1072,135],{"class":75},[69,1074,1075],{"class":160}," ref",[69,1077,461],{"class":79},[69,1079,1080],{"class":131},"number",[69,1082,1083],{"class":75}," |",[69,1085,1086],{"class":131}," null",[69,1088,1089],{"class":79},">(",[69,1091,1092],{"class":131},"null",[69,1094,535],{"class":79},[69,1096,1098],{"class":71,"line":1097},15,[69,1099,324],{"emptyLinePlaceholder":323},[69,1101,1103],{"class":71,"line":1102},16,[69,1104,1105],{"class":86},"// ждем ответа от воркера\n",[69,1107,1109,1111,1113,1115,1117,1119,1121,1123,1125,1127,1129,1131],{"class":71,"line":1108},17,[69,1110,637],{"class":79},[69,1112,445],{"class":160},[69,1114,135],{"class":75},[69,1116,450],{"class":79},[69,1118,453],{"class":289},[69,1120,293],{"class":75},[69,1122,458],{"class":160},[69,1124,461],{"class":79},[69,1126,248],{"class":160},[69,1128,466],{"class":79},[69,1130,469],{"class":75},[69,1132,284],{"class":79},[69,1134,1136,1138,1140,1142,1144],{"class":71,"line":1135},18,[69,1137,476],{"class":75},[69,1139,479],{"class":79},[69,1141,482],{"class":75},[69,1143,344],{"class":147},[69,1145,487],{"class":79},[69,1147,1149,1152,1154],{"class":71,"line":1148},19,[69,1150,1151],{"class":79},"    result.value ",[69,1153,891],{"class":75},[69,1155,1156],{"class":79}," event.data.result;\n",[69,1158,1160],{"class":71,"line":1159},20,[69,1161,573],{"class":79},[69,1163,1165],{"class":71,"line":1164},21,[69,1166,578],{"class":79},[69,1168,1170],{"class":71,"line":1169},22,[69,1171,1172],{"class":86},"// отправляем данные для подсчета\n",[69,1174,1176,1178,1181,1183,1185,1187],{"class":71,"line":1175},23,[69,1177,609],{"class":75},[69,1179,1180],{"class":160}," computeSum",[69,1182,135],{"class":75},[69,1184,1003],{"class":79},[69,1186,469],{"class":75},[69,1188,284],{"class":79},[69,1190,1192,1194,1197,1199,1201,1204,1206,1209,1211,1214,1216,1219,1221,1224,1227,1230,1233,1236],{"class":71,"line":1191},24,[69,1193,683],{"class":75},[69,1195,1196],{"class":131}," data",[69,1198,293],{"class":75},[69,1200,308],{"class":131},[69,1202,1203],{"class":79},"[] ",[69,1205,891],{"class":75},[69,1207,1208],{"class":79}," Array.",[69,1210,428],{"class":160},[69,1212,1213],{"class":79},"({ length: ",[69,1215,626],{"class":131},[69,1217,1218],{"class":79}," }, () ",[69,1220,469],{"class":75},[69,1222,1223],{"class":79}," Math.",[69,1225,1226],{"class":160},"random",[69,1228,1229],{"class":79},"() ",[69,1231,1232],{"class":75},"*",[69,1234,1235],{"class":131}," 100",[69,1237,535],{"class":79},[69,1239,1241,1243,1246,1248,1250,1252,1254,1257],{"class":71,"line":1240},25,[69,1242,683],{"class":75},[69,1244,1245],{"class":131}," message",[69,1247,293],{"class":75},[69,1249,281],{"class":160},[69,1251,135],{"class":75},[69,1253,551],{"class":79},[69,1255,1256],{"class":147},"'compute'",[69,1258,1259],{"class":79},", data };\n",[69,1261,1263,1266,1268],{"class":71,"line":1262},26,[69,1264,1265],{"class":79},"  worker.",[69,1267,565],{"class":160},[69,1269,1270],{"class":79},"(message);\n",[69,1272,1274],{"class":71,"line":1273},27,[69,1275,578],{"class":79},[69,1277,1279],{"class":71,"line":1278},28,[69,1280,1281],{"class":86},"// отчищаем память\n",[69,1283,1285,1287,1289,1291],{"class":71,"line":1284},29,[69,1286,842],{"class":160},[69,1288,764],{"class":79},[69,1290,469],{"class":75},[69,1292,284],{"class":79},[69,1294,1296,1298,1301],{"class":71,"line":1295},30,[69,1297,1265],{"class":79},[69,1299,1300],{"class":160},"terminate",[69,1302,1062],{"class":79},[69,1304,1306],{"class":71,"line":1305},31,[69,1307,1308],{"class":79},"});\n",[69,1310,1312,1314,1316],{"class":71,"line":1311},32,[69,1313,933],{"class":79},[69,1315,944],{"class":860},[69,1317,864],{"class":79},[10,1319,1321],{"id":1320},"реальный-кейс-проект-tuna","Реальный кейс: Проект TunA",[15,1323,1324],{},"В проекте TunA возникла проблема с производительностью и блокировкой UI из-за частых расчётов частоты (frequency calculations), даже при использовании debounce. Эти расчёты выполнялись в основном потоке, что приводило к \"зависаниям\" интерфейса, особенно при обработке реал-тайм данных или больших объёмов информации.",[15,1326,1327],{},"Чтобы решить эту проблему, было принято решение добавить Web Worker. Расчёты частоты были вынесены в отдельный поток, что позволило основному потоку оставаться свободным для рендеринга и обработки пользовательских взаимодействий. В результате UI стал более отзывчивым, а производительность значительно улучшилась. Это отличный пример, как Web Workers могут спасти проект от bottleneck'ов в реальных сценариях, связанных с интенсивными вычислениями.",[15,1329,1330],{},"Реализация вебворкера на этом проекте:",[59,1332,1335],{"className":61,"code":1333,"filename":1334,"language":63,"meta":64,"style":64},"import { PitchDetector } from \"pitchy\";\nimport { TUNER_CONFIG } from \"@/constants/tuner\";\nimport { PitchWorkerInput } from \"@/types/worker\";\n\nlet detector: PitchDetector\u003CFloat32Array> | null = null;\n\nconst isValidPitch = (pitch: number, clarity: number): boolean => {\n  return (\n    clarity > TUNER_CONFIG.MIN_CLARITY &&\n    pitch >= TUNER_CONFIG.MIN_FREQUENCY &&\n    pitch \u003C= TUNER_CONFIG.MAX_FREQUENCY\n  );\n};\n\nself.onmessage = (e: MessageEvent\u003CPitchWorkerInput>) => {\n  const { buffer, sampleRate } = e.data;\n\n  if (!detector) {\n    detector = PitchDetector.forFloat32Array(buffer.length);\n  }\n  const [pitch, clarity] = detector.findPitch(buffer, sampleRate);\n\n  if (isValidPitch(pitch, clarity)) {\n    self.postMessage({ pitch, clarity });\n  }\n};\n\n// Отчистка памяти\nself.onclose = () => {\n  detector = null;\n};\n","pitchWorker.ts",[66,1336,1337,1351,1365,1379,1383,1415,1419,1459,1467,1486,1503,1517,1522,1526,1530,1558,1581,1585,1597,1618,1622,1649,1653,1665,1674,1678,1682,1686,1691,1706,1717],{"__ignoreMap":64},[69,1338,1339,1341,1344,1346,1349],{"class":71,"line":72},[69,1340,419],{"class":75},[69,1342,1343],{"class":79}," { PitchDetector } ",[69,1345,428],{"class":75},[69,1347,1348],{"class":147}," \"pitchy\"",[69,1350,164],{"class":79},[69,1352,1353,1355,1358,1360,1363],{"class":71,"line":83},[69,1354,419],{"class":75},[69,1356,1357],{"class":79}," { TUNER_CONFIG } ",[69,1359,428],{"class":75},[69,1361,1362],{"class":147}," \"@/constants/tuner\"",[69,1364,164],{"class":79},[69,1366,1367,1369,1372,1374,1377],{"class":71,"line":90},[69,1368,419],{"class":75},[69,1370,1371],{"class":79}," { PitchWorkerInput } ",[69,1373,428],{"class":75},[69,1375,1376],{"class":147}," \"@/types/worker\"",[69,1378,164],{"class":79},[69,1380,1381],{"class":71,"line":96},[69,1382,324],{"emptyLinePlaceholder":323},[69,1384,1385,1388,1391,1393,1396,1398,1401,1404,1407,1409,1411,1413],{"class":71,"line":105},[69,1386,1387],{"class":75},"let",[69,1389,1390],{"class":79}," detector",[69,1392,293],{"class":75},[69,1394,1395],{"class":160}," PitchDetector",[69,1397,461],{"class":79},[69,1399,1400],{"class":160},"Float32Array",[69,1402,1403],{"class":79},"> ",[69,1405,1406],{"class":75},"|",[69,1408,1086],{"class":131},[69,1410,135],{"class":75},[69,1412,1086],{"class":131},[69,1414,164],{"class":79},[69,1416,1417],{"class":71,"line":111},[69,1418,324],{"emptyLinePlaceholder":323},[69,1420,1421,1423,1426,1428,1430,1433,1435,1437,1439,1442,1444,1446,1449,1451,1454,1457],{"class":71,"line":116},[69,1422,609],{"class":75},[69,1424,1425],{"class":160}," isValidPitch",[69,1427,135],{"class":75},[69,1429,450],{"class":79},[69,1431,1432],{"class":289},"pitch",[69,1434,293],{"class":75},[69,1436,308],{"class":131},[69,1438,512],{"class":79},[69,1440,1441],{"class":289},"clarity",[69,1443,293],{"class":75},[69,1445,308],{"class":131},[69,1447,1448],{"class":79},")",[69,1450,293],{"class":75},[69,1452,1453],{"class":131}," boolean",[69,1455,1456],{"class":75}," =>",[69,1458,284],{"class":79},[69,1460,1461,1464],{"class":71,"line":122},[69,1462,1463],{"class":75},"  return",[69,1465,1466],{"class":79}," (\n",[69,1468,1469,1472,1475,1478,1480,1483],{"class":71,"line":167},[69,1470,1471],{"class":79},"    clarity ",[69,1473,1474],{"class":75},">",[69,1476,1477],{"class":131}," TUNER_CONFIG",[69,1479,391],{"class":79},[69,1481,1482],{"class":131},"MIN_CLARITY",[69,1484,1485],{"class":75}," &&\n",[69,1487,1488,1491,1494,1496,1498,1501],{"class":71,"line":207},[69,1489,1490],{"class":79},"    pitch ",[69,1492,1493],{"class":75},">=",[69,1495,1477],{"class":131},[69,1497,391],{"class":79},[69,1499,1500],{"class":131},"MIN_FREQUENCY",[69,1502,1485],{"class":75},[69,1504,1505,1507,1510,1512,1514],{"class":71,"line":228},[69,1506,1490],{"class":79},[69,1508,1509],{"class":75},"\u003C=",[69,1511,1477],{"class":131},[69,1513,391],{"class":79},[69,1515,1516],{"class":131},"MAX_FREQUENCY\n",[69,1518,1519],{"class":71,"line":1044},[69,1520,1521],{"class":79},"  );\n",[69,1523,1524],{"class":71,"line":1050},[69,1525,578],{"class":79},[69,1527,1528],{"class":71,"line":1065},[69,1529,324],{"emptyLinePlaceholder":323},[69,1531,1532,1534,1536,1538,1540,1543,1545,1547,1549,1552,1554,1556],{"class":71,"line":1097},[69,1533,442],{"class":79},[69,1535,445],{"class":160},[69,1537,135],{"class":75},[69,1539,450],{"class":79},[69,1541,1542],{"class":289},"e",[69,1544,293],{"class":75},[69,1546,458],{"class":160},[69,1548,461],{"class":79},[69,1550,1551],{"class":160},"PitchWorkerInput",[69,1553,466],{"class":79},[69,1555,469],{"class":75},[69,1557,284],{"class":79},[69,1559,1560,1562,1565,1568,1570,1573,1576,1578],{"class":71,"line":1102},[69,1561,683],{"class":75},[69,1563,1564],{"class":79}," { ",[69,1566,1567],{"class":131},"buffer",[69,1569,512],{"class":79},[69,1571,1572],{"class":131},"sampleRate",[69,1574,1575],{"class":79}," } ",[69,1577,891],{"class":75},[69,1579,1580],{"class":79}," e.data;\n",[69,1582,1583],{"class":71,"line":1108},[69,1584,324],{"emptyLinePlaceholder":323},[69,1586,1587,1589,1591,1594],{"class":71,"line":1135},[69,1588,476],{"class":75},[69,1590,450],{"class":79},[69,1592,1593],{"class":75},"!",[69,1595,1596],{"class":79},"detector) {\n",[69,1598,1599,1602,1604,1607,1610,1613,1616],{"class":71,"line":1148},[69,1600,1601],{"class":79},"    detector ",[69,1603,891],{"class":75},[69,1605,1606],{"class":79}," PitchDetector.",[69,1608,1609],{"class":160},"forFloat32Array",[69,1611,1612],{"class":79},"(buffer.",[69,1614,1615],{"class":131},"length",[69,1617,535],{"class":79},[69,1619,1620],{"class":71,"line":1159},[69,1621,573],{"class":79},[69,1623,1624,1626,1629,1631,1633,1635,1638,1640,1643,1646],{"class":71,"line":1164},[69,1625,683],{"class":75},[69,1627,1628],{"class":79}," [",[69,1630,1432],{"class":131},[69,1632,512],{"class":79},[69,1634,1441],{"class":131},[69,1636,1637],{"class":79},"] ",[69,1639,891],{"class":75},[69,1641,1642],{"class":79}," detector.",[69,1644,1645],{"class":160},"findPitch",[69,1647,1648],{"class":79},"(buffer, sampleRate);\n",[69,1650,1651],{"class":71,"line":1169},[69,1652,324],{"emptyLinePlaceholder":323},[69,1654,1655,1657,1659,1662],{"class":71,"line":1175},[69,1656,476],{"class":75},[69,1658,450],{"class":79},[69,1660,1661],{"class":160},"isValidPitch",[69,1663,1664],{"class":79},"(pitch, clarity)) {\n",[69,1666,1667,1669,1671],{"class":71,"line":1191},[69,1668,562],{"class":79},[69,1670,565],{"class":160},[69,1672,1673],{"class":79},"({ pitch, clarity });\n",[69,1675,1676],{"class":71,"line":1240},[69,1677,573],{"class":79},[69,1679,1680],{"class":71,"line":1262},[69,1681,578],{"class":79},[69,1683,1684],{"class":71,"line":1273},[69,1685,324],{"emptyLinePlaceholder":323},[69,1687,1688],{"class":71,"line":1278},[69,1689,1690],{"class":86},"// Отчистка памяти\n",[69,1692,1693,1695,1698,1700,1702,1704],{"class":71,"line":1284},[69,1694,442],{"class":79},[69,1696,1697],{"class":160},"onclose",[69,1699,135],{"class":75},[69,1701,1003],{"class":79},[69,1703,469],{"class":75},[69,1705,284],{"class":79},[69,1707,1708,1711,1713,1715],{"class":71,"line":1295},[69,1709,1710],{"class":79},"  detector ",[69,1712,891],{"class":75},[69,1714,1086],{"class":131},[69,1716,164],{"class":79},[69,1718,1719],{"class":71,"line":1305},[69,1720,578],{"class":79},[15,1722,1723,1724,1727],{},"В этом примере worker обрабатывает аудио-буфер для определения pitch (частоты тона) с помощью библиотеки ",[66,1725,1726],{},"pitchy",", фильтруя результаты по валидности и отправляя только релевантные данные обратно в основной поток.",[10,1729,1731],{"id":1730},"преимущества-в-реальных-проектах","Преимущества в реальных проектах",[15,1733,1734],{},"В проектах Web Workers особенно полезны для:",[22,1736,1737,1740],{},[25,1738,1739],{},"Обработки больших данных (например, в дашбордах с графиками).",[25,1741,1742],{},"Реал-тайм приложений (чаты, игры), где нужно обрабатывать события без задержек.",[1744,1745,1746],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .sByVh, html code.shiki .sByVh{--shiki-light:#22863A;--shiki-default:#85E89D;--shiki-dark:#85E89D}",{"title":64,"searchDepth":83,"depth":83,"links":1748},[1749,1752,1753,1754,1755,1756,1757,1758],{"id":12,"depth":83,"text":13,"children":1750},[1751],{"id":53,"depth":90,"text":54},{"id":234,"depth":83,"text":235},{"id":368,"depth":83,"text":369},{"id":584,"depth":83,"text":585},{"id":708,"depth":83,"text":709},{"id":809,"depth":83,"text":810},{"id":1320,"depth":83,"text":1321},{"id":1730,"depth":83,"text":1731},"27/10/2025","В статье разберём Web Workers: их преимущества, типизацию в TypeScript, создание и использование в Vue.js","md",{"script":1763},[1764],{"type":1765,"key":1766,"data-nuxt-schema-org":323,"nodes":1767},"application/ld+json","schema-org-graph",[1768],{"_resolver":1769},"webPage","https://canvas.hrcd.fr/articles/launch-your-porfolio.jpg",{},{"title":1773},"Web Workers в Vue",{"props":1775},{},"/ru/articles/web-workers-v-vue","10",null,{"_resolver":1769},{"title":1773,"description":1760},{"loc":1776,"images":1782,"videos":1783},[],[],"ru/articles/Web Workers в Vue",[1786,1787,1788,1789,1790,64],"Vue","Typescript ","Performance ","Javascript ","Webworkers","31nvOYm2W8oHXLtuHiu-mBmyypCmUZqSW7tNg1ihsnQ",1761679270898]