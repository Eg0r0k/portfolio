[{"data":1,"prerenderedAt":1794},["ShallowReactive",2],{"/ru/articles/web-workers-v-vue":3},{"id":4,"title":5,"body":6,"date":1761,"description":1762,"extension":1763,"head":1764,"image":1772,"meta":1773,"navigation":1774,"ogImage":1776,"path":1778,"readingTime":1779,"robots":1780,"schemaOrg":1781,"seo":1782,"sitemap":1783,"stem":1786,"tags":1787,"__hash__":1793},"articles_ru/ru/articles/Web Workers в Vue.md","Web Workers в Vue: Создание, Типизация и Использование ",{"type":7,"value":8,"toc":1749},"minimark",[9,14,18,21,23,52,57,60,234,238,265,268,368,372,375,378,401,404,411,581,584,588,591,594,597,705,708,712,715,718,721,806,809,813,816,846,849,1320,1324,1327,1330,1333,1723,1730,1734,1737,1745],[10,11,13],"h2",{"id":12},"введение-в-web-workers","Введение в Web workers",[15,16,17],"p",{},"Web Workers — это мощный инструмент JavaScript, позволяющий выполнять скрипты в фоновом потоке, отдельно от основного потока браузера. Это означает, что тяжёлые вычисления, такие как обработка больших массивов данных, парсинг JSON или сложные математические операции, не будут блокировать пользовательский интерфейс (UI). В результате приложение остаётся отзывчивым, а пользователь не замечает \"зависаний\".",[15,19,20],{},"Почему Web Workers полезны для проектов?",[15,22,20],{},[24,25,26,34,40,46],"ul",{},[27,28,29,33],"li",{},[30,31,32],"strong",{},"Улучшение производительности:"," Они позволяют распараллеливать задачи, что критично для приложений с интенсивными вычислениями (например, игры, анализ данных или реал-тайм обработка).",[27,35,36,39],{},[30,37,38],{},"Отзывчивость UI:"," Основной поток остаётся свободным для обработки событий, анимаций и рендеринга.",[27,41,42,45],{},[30,43,44],{},"Безопасность:"," Workers не имеют доступа к DOM, что предотвращает случайные мутации UI и делает код более предсказуемым.",[27,47,48,51],{},[30,49,50],{},"Масштабируемость:"," В больших проектах, таких как SPA на Vue, Workers помогают избежать bottleneck'ов в производительности.",[53,54,56],"h3",{"id":55},"проверка-поддержки-web-workers","Проверка поддержки Web Workers",[15,58,59],{},"Хоть и Webworker имеет большую поддержку браузерами документация MDN рекомендует перед использованием вебворкера проверять к нему доступ, и использовать fallback подсчета в основном потоке",[61,62,67],"pre",{"className":63,"code":64,"language":65,"meta":66,"style":66},"language-js shiki shiki-themes github-light github-dark github-dark","if(window.Worker){\n// Инициация воркера\n}\nelse{\n// fallback\n}\n// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\n//Позволяет сразу проверить какие воркеры поддерживаются в браузере  \n","js","",[68,69,70,83,90,96,105,111,116,122,167,207,228],"code",{"__ignoreMap":66},[71,72,75,79],"span",{"class":73,"line":74},"line",1,[71,76,78],{"class":77},"so5gQ","if",[71,80,82],{"class":81},"slsVL","(window.Worker){\n",[71,84,86],{"class":73,"line":85},2,[71,87,89],{"class":88},"sCsY4","// Инициация воркера\n",[71,91,93],{"class":73,"line":92},3,[71,94,95],{"class":81},"}\n",[71,97,99,102],{"class":73,"line":98},4,[71,100,101],{"class":77},"else",[71,103,104],{"class":81},"{\n",[71,106,108],{"class":73,"line":107},5,[71,109,110],{"class":88},"// fallback\n",[71,112,114],{"class":73,"line":113},6,[71,115,95],{"class":81},[71,117,119],{"class":73,"line":118},7,[71,120,121],{"class":88},"// Или другой варинат взято с https://github.com/morethanwords/tweb/blob/be9ceb7354565ec5b605f89be81b4ef3e2302211/src/helpers/context.ts#L9\n",[71,123,125,128,131,135,138,141,144,147,151,154,157,160,164],{"class":73,"line":124},8,[71,126,127],{"class":77},"export",[71,129,130],{"class":77}," const",[71,132,134],{"class":133},"suiK_"," IS_SERVICE_WORKER",[71,136,137],{"class":77}," =",[71,139,140],{"class":77}," typeof",[71,142,143],{"class":81}," ServiceWorkerGlobalScope ",[71,145,146],{"class":77},"!==",[71,148,150],{"class":149},"sfrk1"," 'undefined'",[71,152,153],{"class":77}," &&",[71,155,156],{"class":81}," self ",[71,158,159],{"class":77},"instanceof",[71,161,163],{"class":162},"shcOC"," ServiceWorkerGlobalScope",[71,165,166],{"class":81},";\n",[71,168,170,172,174,177,179,181,184,186,188,190,192,194,197,199,202,205],{"class":73,"line":169},9,[71,171,127],{"class":77},[71,173,130],{"class":77},[71,175,176],{"class":133}," IS_WEB_WORKER",[71,178,137],{"class":77},[71,180,140],{"class":77},[71,182,183],{"class":81}," WorkerGlobalScope ",[71,185,146],{"class":77},[71,187,150],{"class":149},[71,189,153],{"class":77},[71,191,156],{"class":81},[71,193,159],{"class":77},[71,195,196],{"class":162}," WorkerGlobalScope",[71,198,153],{"class":77},[71,200,201],{"class":77}," !",[71,203,204],{"class":133},"IS_SERVICE_WORKER",[71,206,166],{"class":81},[71,208,210,212,214,217,219,221,224,226],{"class":73,"line":209},10,[71,211,127],{"class":77},[71,213,130],{"class":77},[71,215,216],{"class":133}," IS_WORKER",[71,218,137],{"class":77},[71,220,176],{"class":133},[71,222,223],{"class":77}," ||",[71,225,134],{"class":133},[71,227,166],{"class":81},[71,229,231],{"class":73,"line":230},11,[71,232,233],{"class":88},"//Позволяет сразу проверить какие воркеры поддерживаются в браузере\n",[10,235,237],{"id":236},"типизация-web-workers-с-typescript","Типизация Web Workers с TypeScript",[239,240,241,252,259],"ol",{},[27,242,243,244,247,248,251],{},"Определите интерфейсы для сообщений (например, ",[68,245,246],{},"WorkerMessage"," для входящих и ",[68,249,250],{},"WorkerResponse"," для исходящих).",[27,253,254,255,258],{},"Используйте ",[68,256,257],{},"Worker"," как тип для экземпляра worker'а.",[27,260,261,262],{},"Типизируйте обработчики событий с ",[68,263,264],{},"MessageEvent",[15,266,267],{},"Основные шаги:",[61,269,272],{"className":63,"code":270,"filename":271,"language":65,"meta":66,"style":66},"export interface WorkerMessage {\n  type: 'compute';\n  data: number[]; // Массив чисел для обработки\n}\n\nexport interface WorkerResponse {\n  type: 'result';\n  result: number; // Результат вычислений\n}\n","worker-types.ts",[68,273,274,287,301,317,321,327,338,349,364],{"__ignoreMap":66},[71,275,276,278,281,284],{"class":73,"line":74},[71,277,127],{"class":77},[71,279,280],{"class":77}," interface",[71,282,283],{"class":162}," WorkerMessage",[71,285,286],{"class":81}," {\n",[71,288,289,293,296,299],{"class":73,"line":85},[71,290,292],{"class":291},"sQHwn","  type",[71,294,295],{"class":77},":",[71,297,298],{"class":149}," 'compute'",[71,300,166],{"class":81},[71,302,303,306,308,311,314],{"class":73,"line":92},[71,304,305],{"class":291},"  data",[71,307,295],{"class":77},[71,309,310],{"class":133}," number",[71,312,313],{"class":81},"[]; ",[71,315,316],{"class":88},"// Массив чисел для обработки\n",[71,318,319],{"class":73,"line":98},[71,320,95],{"class":81},[71,322,323],{"class":73,"line":107},[71,324,326],{"emptyLinePlaceholder":325},true,"\n",[71,328,329,331,333,336],{"class":73,"line":113},[71,330,127],{"class":77},[71,332,280],{"class":77},[71,334,335],{"class":162}," WorkerResponse",[71,337,286],{"class":81},[71,339,340,342,344,347],{"class":73,"line":118},[71,341,292],{"class":291},[71,343,295],{"class":77},[71,345,346],{"class":149}," 'result'",[71,348,166],{"class":81},[71,350,351,354,356,358,361],{"class":73,"line":124},[71,352,353],{"class":291},"  result",[71,355,295],{"class":77},[71,357,310],{"class":133},[71,359,360],{"class":81},"; ",[71,362,363],{"class":88},"// Результат вычислений\n",[71,365,366],{"class":73,"line":169},[71,367,95],{"class":81},[10,369,371],{"id":370},"создание-web-worker-в-vue","Создание Web Worker в Vue",[15,373,374],{},"В Vue.js Web Workers создаются как отдельные файлы (например, my-worker.ts), которые импортируются в компоненты. Vue не имеет встроенной поддержки Workers, но их легко интегрировать.",[15,376,377],{},"Шаги по созданию:",[239,379,380,387,394],{},[27,381,382,383,386],{},"Создайте файл worker'а в директории ",[68,384,385],{},"src/workers/"," (или любой другой).",[27,388,389,390,393],{},"В файле worker'а обработайте сообщения с помощью ",[68,391,392],{},"self.onmessage",".",[27,395,396,397,400],{},"В Vue-компоненте создайте экземпляр new ",[68,398,399],{},"Worker()"," с путём к файлу.",[15,402,403],{},"Важно: Если вы используете Vite (стандартный бандлер для Vue 3), добавьте ?worker в импорт, чтобы Vite правильно обработал worker как отдельный чанк.",[15,405,406,407,410],{},"Пример файла worker'а ",[68,408,409],{},"src/workers/sum-worker.ts","):",[61,412,415],{"className":63,"code":413,"filename":414,"language":65,"meta":66,"style":66},"import type { WorkerMessage, WorkerResponse } from '../types/worker-types';\n\nself.onmessage = (event: MessageEvent\u003CWorkerMessage>) => {\n  if (event.data.type === 'compute') {\n    const sum = event.data.data.reduce((acc, val) => acc + val, 0);\n    const response: WorkerResponse = { type: 'result', result: sum };\n    self.postMessage(response);\n  }\n};\n","sum-worker.ts",[68,416,417,436,440,474,490,538,560,571,576],{"__ignoreMap":66},[71,418,419,422,425,428,431,434],{"class":73,"line":74},[71,420,421],{"class":77},"import",[71,423,424],{"class":77}," type",[71,426,427],{"class":81}," { WorkerMessage, WorkerResponse } ",[71,429,430],{"class":77},"from",[71,432,433],{"class":149}," '../types/worker-types'",[71,435,166],{"class":81},[71,437,438],{"class":73,"line":85},[71,439,326],{"emptyLinePlaceholder":325},[71,441,442,445,448,450,453,456,458,461,464,466,469,472],{"class":73,"line":92},[71,443,444],{"class":81},"self.",[71,446,447],{"class":162},"onmessage",[71,449,137],{"class":77},[71,451,452],{"class":81}," (",[71,454,455],{"class":291},"event",[71,457,295],{"class":77},[71,459,460],{"class":162}," MessageEvent",[71,462,463],{"class":81},"\u003C",[71,465,246],{"class":162},[71,467,468],{"class":81},">) ",[71,470,471],{"class":77},"=>",[71,473,286],{"class":81},[71,475,476,479,482,485,487],{"class":73,"line":98},[71,477,478],{"class":77},"  if",[71,480,481],{"class":81}," (event.data.type ",[71,483,484],{"class":77},"===",[71,486,298],{"class":149},[71,488,489],{"class":81},") {\n",[71,491,492,495,498,500,503,506,509,512,515,518,521,523,526,529,532,535],{"class":73,"line":107},[71,493,494],{"class":77},"    const",[71,496,497],{"class":133}," sum",[71,499,137],{"class":77},[71,501,502],{"class":81}," event.data.data.",[71,504,505],{"class":162},"reduce",[71,507,508],{"class":81},"((",[71,510,511],{"class":291},"acc",[71,513,514],{"class":81},", ",[71,516,517],{"class":291},"val",[71,519,520],{"class":81},") ",[71,522,471],{"class":77},[71,524,525],{"class":81}," acc ",[71,527,528],{"class":77},"+",[71,530,531],{"class":81}," val, ",[71,533,534],{"class":133},"0",[71,536,537],{"class":81},");\n",[71,539,540,542,545,547,549,551,554,557],{"class":73,"line":113},[71,541,494],{"class":77},[71,543,544],{"class":133}," response",[71,546,295],{"class":77},[71,548,335],{"class":162},[71,550,137],{"class":77},[71,552,553],{"class":81}," { type: ",[71,555,556],{"class":149},"'result'",[71,558,559],{"class":81},", result: sum };\n",[71,561,562,565,568],{"class":73,"line":118},[71,563,564],{"class":81},"    self.",[71,566,567],{"class":162},"postMessage",[71,569,570],{"class":81},"(response);\n",[71,572,573],{"class":73,"line":124},[71,574,575],{"class":81},"  }\n",[71,577,578],{"class":73,"line":169},[71,579,580],{"class":81},"};\n",[15,582,583],{},"Этот worker будет суммирует массив чисел в фоне.",[10,585,587],{"id":586},"передача-данных-в-web-workers-копирование-vs-transfer","Передача данных в Web Workers: Копирование vs. Transfer",[15,589,590],{},"При передаче данных в Web Worker через postMessage обычные данные (например, объекты, массивы, строки) копируются с помощью алгоритма structured clone. Это означает, что создаётся глубокая копия данных, что может быть ресурсоёмким для больших объёмов информации, но позволяет обоим потокам работать с данными независимо.",[15,592,593],{},"Однако для \"битовых\" данных, таких как ArrayBuffer, TypedArray (например, Float32Array) или другие transferable объекты (MessagePort, ImageBitmap и т.д.), можно использовать опцию transfer. В этом случае данные не копируются, а передаются: владение объектом переходит к worker'у, и он становится недоступным в основном потоке. Это экономит память и время, особенно для больших буферов данных (например, аудио или видео).",[15,595,596],{},"Пример передачи с transfer:",[61,598,600],{"className":63,"code":599,"language":65,"meta":66,"style":66},"// В основном потоке\nconst buffer = new Float32Array(1000000); // Большой буфер\nworker.postMessage({ type: 'process', buffer }, [buffer]); // Передаём buffer без копирования\n\n// В worker'е\nself.onmessage = (event) => {\n  const buffer = event.data.buffer; // Теперь buffer доступен только здесь\n  // Обработка...\n};\n",[68,601,602,607,635,654,658,663,681,696,701],{"__ignoreMap":66},[71,603,604],{"class":73,"line":74},[71,605,606],{"class":88},"// В основном потоке\n",[71,608,609,612,615,617,620,623,626,629,632],{"class":73,"line":85},[71,610,611],{"class":77},"const",[71,613,614],{"class":133}," buffer",[71,616,137],{"class":77},[71,618,619],{"class":77}," new",[71,621,622],{"class":162}," Float32Array",[71,624,625],{"class":81},"(",[71,627,628],{"class":133},"1000000",[71,630,631],{"class":81},"); ",[71,633,634],{"class":88},"// Большой буфер\n",[71,636,637,640,642,645,648,651],{"class":73,"line":92},[71,638,639],{"class":81},"worker.",[71,641,567],{"class":162},[71,643,644],{"class":81},"({ type: ",[71,646,647],{"class":149},"'process'",[71,649,650],{"class":81},", buffer }, [buffer]); ",[71,652,653],{"class":88},"// Передаём buffer без копирования\n",[71,655,656],{"class":73,"line":98},[71,657,326],{"emptyLinePlaceholder":325},[71,659,660],{"class":73,"line":107},[71,661,662],{"class":88},"// В worker'е\n",[71,664,665,667,669,671,673,675,677,679],{"class":73,"line":113},[71,666,444],{"class":81},[71,668,447],{"class":162},[71,670,137],{"class":77},[71,672,452],{"class":81},[71,674,455],{"class":291},[71,676,520],{"class":81},[71,678,471],{"class":77},[71,680,286],{"class":81},[71,682,683,686,688,690,693],{"class":73,"line":118},[71,684,685],{"class":77},"  const",[71,687,614],{"class":133},[71,689,137],{"class":77},[71,691,692],{"class":81}," event.data.buffer; ",[71,694,695],{"class":88},"// Теперь buffer доступен только здесь\n",[71,697,698],{"class":73,"line":124},[71,699,700],{"class":88},"  // Обработка...\n",[71,702,703],{"class":73,"line":169},[71,704,580],{"class":81},[15,706,707],{},"Если не использовать transfer для transferable объектов, они всё равно скопируются, но transfer оптимизирует процесс. Это особенно полезно в сценариях с реал-тайм обработкой данных, как в проекте TunA с аудио-буферами. Данный способ используется в веб версии телеграмма для обработки WAV форматов и видео форматов.",[10,709,711],{"id":710},"обход-троттлинга-таймеров-с-помощью-web-workers","Обход троттлинга таймеров с помощью Web Workers",[15,713,714],{},"В браузерах функции setTimeout и setInterval в основном потоке подвержены троттлингу (throttling) в неактивных вкладках (background tabs). Это сделано для экономии ресурсов CPU и батареи: если вкладка не видима, браузер может увеличивать минимальный интервал таймера до 1 секунды или больше. Со временем троттлинг усиливается — интервал может расти до 2 секунд, 3 секунд и т.д., что приводит к неточным срабатываниям. Это проблема для приложений, требующих точного тайминга, таких как реал-тайм обновления, анимации или мониторинг.",[15,716,717],{},"Однако, если вынести таймеры в Web Worker, они продолжают работать с высокой точностью, независимо от активности вкладки. Workers не зависят от видимости страницы и не подвержены такому троттлингу, обеспечивая постоянные и точные интервалы. Это делает их идеальными для фоновых задач, требующих стабильного расписания.",[15,719,720],{},"Пример в worker'е для точного таймера:",[61,722,725],{"className":63,"code":723,"filename":724,"language":65,"meta":66,"style":66},"self.onmessage = (event) => {\n  if (event.data === 'start') {\n    setInterval(() => {\n      self.postMessage('tick'); // Отправляем сигнал каждую секунду точно\n    }, 1000);\n  }\n};\n","timer-worker.ts",[68,726,727,745,759,771,788,798,802],{"__ignoreMap":66},[71,728,729,731,733,735,737,739,741,743],{"class":73,"line":74},[71,730,444],{"class":81},[71,732,447],{"class":162},[71,734,137],{"class":77},[71,736,452],{"class":81},[71,738,455],{"class":291},[71,740,520],{"class":81},[71,742,471],{"class":77},[71,744,286],{"class":81},[71,746,747,749,752,754,757],{"class":73,"line":85},[71,748,478],{"class":77},[71,750,751],{"class":81}," (event.data ",[71,753,484],{"class":77},[71,755,756],{"class":149}," 'start'",[71,758,489],{"class":81},[71,760,761,764,767,769],{"class":73,"line":92},[71,762,763],{"class":162},"    setInterval",[71,765,766],{"class":81},"(() ",[71,768,471],{"class":77},[71,770,286],{"class":81},[71,772,773,776,778,780,783,785],{"class":73,"line":98},[71,774,775],{"class":81},"      self.",[71,777,567],{"class":162},[71,779,625],{"class":81},[71,781,782],{"class":149},"'tick'",[71,784,631],{"class":81},[71,786,787],{"class":88},"// Отправляем сигнал каждую секунду точно\n",[71,789,790,793,796],{"class":73,"line":107},[71,791,792],{"class":81},"    }, ",[71,794,795],{"class":133},"1000",[71,797,537],{"class":81},[71,799,800],{"class":73,"line":113},[71,801,575],{"class":81},[71,803,804],{"class":73,"line":118},[71,805,580],{"class":81},[15,807,808],{},"В основном потоке слушайте сообщения от worker'а для обработки \"тиков\". Это решает проблему в сценариях, где точность критична, например, в часах, уведомлениях или реал-тайм данных.",[10,810,812],{"id":811},"использование-web-worker-в-vue-компоненте","Использование Web Worker в Vue-компоненте",[15,814,815],{},"Механизм работы достаточно схож с WebSocket.",[239,817,818,821,824,829,835],{},[27,819,820],{},"Импортируйте worker.",[27,822,823],{},"Создайте экземпляр.",[27,825,826,827,393],{},"Отправляйте сообщения с ",[68,828,567],{},[27,830,831,832,834],{},"Обработайте ответы с ",[68,833,447],{}," .",[27,836,837,838,841,842,845],{},"Не забудьте завершить worker с ",[68,839,840],{},"terminate()",", когда он не нужен (например, в ",[68,843,844],{},"onUnmounted",") чтобы избежать memory leaks.",[15,847,848],{},"Тут представлен механиз работы, не самый чистый но достаточно понятный.",[61,850,854],{"className":851,"code":852,"language":853,"meta":66,"style":66},"language-vue shiki shiki-themes github-light github-dark github-dark","\u003Ctemplate>\n  \u003Cdiv>\n    \u003Cbutton @click=\"computeSum\">Вычислить сумму\u003C/button>\n    \u003Cp>Результат: {{ result }}\u003C/p>\n  \u003C/div>\n\u003C/template>\n\u003Cscript setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue';\nimport type { WorkerMessage, WorkerResponse } from './types/worker-types';\n// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\nconst WorkerConstructor = () => new Worker(new URL('./workers/sum-worker.ts', import.meta.url), { type: 'module' });\n// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\nconst worker = WorkerConstructor();\nconst result = ref\u003Cnumber | null>(null);\n\n// ждем ответа от воркера\nworker.onmessage = (event: MessageEvent\u003CWorkerResponse>) => {\n  if (event.data.type === 'result') {\n    result.value = event.data.result;\n  }\n};\n// отправляем данные для подсчета\nconst computeSum = () => {\n  const data: number[] = Array.from({ length: 1000000 }, () => Math.random() * 100);\n  const message: WorkerMessage = { type: 'compute', data };\n  worker.postMessage(message);\n};\n// отчищаем память\nonUnmounted(() => {\n  worker.terminate();\n});\n\u003C/script>\n","vue",[68,855,856,867,877,909,922,931,940,960,974,989,994,1044,1050,1065,1097,1102,1108,1135,1148,1159,1164,1169,1175,1191,1240,1262,1273,1278,1284,1295,1305,1311],{"__ignoreMap":66},[71,857,858,860,864],{"class":73,"line":74},[71,859,463],{"class":81},[71,861,863],{"class":862},"sByVh","template",[71,865,866],{"class":81},">\n",[71,868,869,872,875],{"class":73,"line":85},[71,870,871],{"class":81},"  \u003C",[71,873,874],{"class":862},"div",[71,876,866],{"class":81},[71,878,879,882,885,888,891,894,897,900,902,905,907],{"class":73,"line":92},[71,880,881],{"class":81},"    \u003C",[71,883,884],{"class":862},"button",[71,886,887],{"class":81}," @",[71,889,890],{"class":162},"click",[71,892,893],{"class":81},"=",[71,895,896],{"class":149},"\"",[71,898,899],{"class":81},"computeSum",[71,901,896],{"class":149},[71,903,904],{"class":81},">Вычислить сумму\u003C/",[71,906,884],{"class":862},[71,908,866],{"class":81},[71,910,911,913,915,918,920],{"class":73,"line":98},[71,912,881],{"class":81},[71,914,15],{"class":862},[71,916,917],{"class":81},">Результат: {{ result }}\u003C/",[71,919,15],{"class":862},[71,921,866],{"class":81},[71,923,924,927,929],{"class":73,"line":107},[71,925,926],{"class":81},"  \u003C/",[71,928,874],{"class":862},[71,930,866],{"class":81},[71,932,933,936,938],{"class":73,"line":113},[71,934,935],{"class":81},"\u003C/",[71,937,863],{"class":862},[71,939,866],{"class":81},[71,941,942,944,947,950,953,955,958],{"class":73,"line":118},[71,943,463],{"class":81},[71,945,946],{"class":862},"script",[71,948,949],{"class":162}," setup",[71,951,952],{"class":162}," lang",[71,954,893],{"class":81},[71,956,957],{"class":149},"\"ts\"",[71,959,866],{"class":81},[71,961,962,964,967,969,972],{"class":73,"line":124},[71,963,421],{"class":77},[71,965,966],{"class":81}," { ref, onUnmounted } ",[71,968,430],{"class":77},[71,970,971],{"class":149}," 'vue'",[71,973,166],{"class":81},[71,975,976,978,980,982,984,987],{"class":73,"line":169},[71,977,421],{"class":77},[71,979,424],{"class":77},[71,981,427],{"class":81},[71,983,430],{"class":77},[71,985,986],{"class":149}," './types/worker-types'",[71,988,166],{"class":81},[71,990,991],{"class":73,"line":209},[71,992,993],{"class":88},"// В воркер передаем ссылку того где он находится (конкретно этот пример с Vite)\n",[71,995,996,998,1001,1003,1006,1008,1010,1013,1015,1018,1021,1023,1026,1028,1030,1032,1035,1038,1041],{"class":73,"line":230},[71,997,611],{"class":77},[71,999,1000],{"class":162}," WorkerConstructor",[71,1002,137],{"class":77},[71,1004,1005],{"class":81}," () ",[71,1007,471],{"class":77},[71,1009,619],{"class":77},[71,1011,1012],{"class":162}," Worker",[71,1014,625],{"class":81},[71,1016,1017],{"class":77},"new",[71,1019,1020],{"class":162}," URL",[71,1022,625],{"class":81},[71,1024,1025],{"class":149},"'./workers/sum-worker.ts'",[71,1027,514],{"class":81},[71,1029,421],{"class":77},[71,1031,393],{"class":81},[71,1033,1034],{"class":133},"meta",[71,1036,1037],{"class":81},".url), { type: ",[71,1039,1040],{"class":149},"'module'",[71,1042,1043],{"class":81}," });\n",[71,1045,1047],{"class":73,"line":1046},12,[71,1048,1049],{"class":88},"// Если требуется реактивность класса Worker его можно обернуть в shadllowRef чтобы не делать всю структуру реактивной\n",[71,1051,1053,1055,1058,1060,1062],{"class":73,"line":1052},13,[71,1054,611],{"class":77},[71,1056,1057],{"class":133}," worker",[71,1059,137],{"class":77},[71,1061,1000],{"class":162},[71,1063,1064],{"class":81},"();\n",[71,1066,1068,1070,1073,1075,1078,1080,1083,1086,1089,1092,1095],{"class":73,"line":1067},14,[71,1069,611],{"class":77},[71,1071,1072],{"class":133}," result",[71,1074,137],{"class":77},[71,1076,1077],{"class":162}," ref",[71,1079,463],{"class":81},[71,1081,1082],{"class":133},"number",[71,1084,1085],{"class":77}," |",[71,1087,1088],{"class":133}," null",[71,1090,1091],{"class":81},">(",[71,1093,1094],{"class":133},"null",[71,1096,537],{"class":81},[71,1098,1100],{"class":73,"line":1099},15,[71,1101,326],{"emptyLinePlaceholder":325},[71,1103,1105],{"class":73,"line":1104},16,[71,1106,1107],{"class":88},"// ждем ответа от воркера\n",[71,1109,1111,1113,1115,1117,1119,1121,1123,1125,1127,1129,1131,1133],{"class":73,"line":1110},17,[71,1112,639],{"class":81},[71,1114,447],{"class":162},[71,1116,137],{"class":77},[71,1118,452],{"class":81},[71,1120,455],{"class":291},[71,1122,295],{"class":77},[71,1124,460],{"class":162},[71,1126,463],{"class":81},[71,1128,250],{"class":162},[71,1130,468],{"class":81},[71,1132,471],{"class":77},[71,1134,286],{"class":81},[71,1136,1138,1140,1142,1144,1146],{"class":73,"line":1137},18,[71,1139,478],{"class":77},[71,1141,481],{"class":81},[71,1143,484],{"class":77},[71,1145,346],{"class":149},[71,1147,489],{"class":81},[71,1149,1151,1154,1156],{"class":73,"line":1150},19,[71,1152,1153],{"class":81},"    result.value ",[71,1155,893],{"class":77},[71,1157,1158],{"class":81}," event.data.result;\n",[71,1160,1162],{"class":73,"line":1161},20,[71,1163,575],{"class":81},[71,1165,1167],{"class":73,"line":1166},21,[71,1168,580],{"class":81},[71,1170,1172],{"class":73,"line":1171},22,[71,1173,1174],{"class":88},"// отправляем данные для подсчета\n",[71,1176,1178,1180,1183,1185,1187,1189],{"class":73,"line":1177},23,[71,1179,611],{"class":77},[71,1181,1182],{"class":162}," computeSum",[71,1184,137],{"class":77},[71,1186,1005],{"class":81},[71,1188,471],{"class":77},[71,1190,286],{"class":81},[71,1192,1194,1196,1199,1201,1203,1206,1208,1211,1213,1216,1218,1221,1223,1226,1229,1232,1235,1238],{"class":73,"line":1193},24,[71,1195,685],{"class":77},[71,1197,1198],{"class":133}," data",[71,1200,295],{"class":77},[71,1202,310],{"class":133},[71,1204,1205],{"class":81},"[] ",[71,1207,893],{"class":77},[71,1209,1210],{"class":81}," Array.",[71,1212,430],{"class":162},[71,1214,1215],{"class":81},"({ length: ",[71,1217,628],{"class":133},[71,1219,1220],{"class":81}," }, () ",[71,1222,471],{"class":77},[71,1224,1225],{"class":81}," Math.",[71,1227,1228],{"class":162},"random",[71,1230,1231],{"class":81},"() ",[71,1233,1234],{"class":77},"*",[71,1236,1237],{"class":133}," 100",[71,1239,537],{"class":81},[71,1241,1243,1245,1248,1250,1252,1254,1256,1259],{"class":73,"line":1242},25,[71,1244,685],{"class":77},[71,1246,1247],{"class":133}," message",[71,1249,295],{"class":77},[71,1251,283],{"class":162},[71,1253,137],{"class":77},[71,1255,553],{"class":81},[71,1257,1258],{"class":149},"'compute'",[71,1260,1261],{"class":81},", data };\n",[71,1263,1265,1268,1270],{"class":73,"line":1264},26,[71,1266,1267],{"class":81},"  worker.",[71,1269,567],{"class":162},[71,1271,1272],{"class":81},"(message);\n",[71,1274,1276],{"class":73,"line":1275},27,[71,1277,580],{"class":81},[71,1279,1281],{"class":73,"line":1280},28,[71,1282,1283],{"class":88},"// отчищаем память\n",[71,1285,1287,1289,1291,1293],{"class":73,"line":1286},29,[71,1288,844],{"class":162},[71,1290,766],{"class":81},[71,1292,471],{"class":77},[71,1294,286],{"class":81},[71,1296,1298,1300,1303],{"class":73,"line":1297},30,[71,1299,1267],{"class":81},[71,1301,1302],{"class":162},"terminate",[71,1304,1064],{"class":81},[71,1306,1308],{"class":73,"line":1307},31,[71,1309,1310],{"class":81},"});\n",[71,1312,1314,1316,1318],{"class":73,"line":1313},32,[71,1315,935],{"class":81},[71,1317,946],{"class":862},[71,1319,866],{"class":81},[10,1321,1323],{"id":1322},"реальный-кейс-проект-tuna","Реальный кейс: Проект TunA",[15,1325,1326],{},"В проекте TunA возникла проблема с производительностью и блокировкой UI из-за частых расчётов частоты (frequency calculations), даже при использовании debounce. Эти расчёты выполнялись в основном потоке, что приводило к \"зависаниям\" интерфейса, особенно при обработке реал-тайм данных или больших объёмов информации.",[15,1328,1329],{},"Чтобы решить эту проблему, было принято решение добавить Web Worker. Расчёты частоты были вынесены в отдельный поток, что позволило основному потоку оставаться свободным для рендеринга и обработки пользовательских взаимодействий. В результате UI стал более отзывчивым, а производительность значительно улучшилась. Это отличный пример, как Web Workers могут спасти проект от bottleneck'ов в реальных сценариях, связанных с интенсивными вычислениями.",[15,1331,1332],{},"Реализация вебворкера на этом проекте:",[61,1334,1337],{"className":63,"code":1335,"filename":1336,"language":65,"meta":66,"style":66},"import { PitchDetector } from \"pitchy\";\nimport { TUNER_CONFIG } from \"@/constants/tuner\";\nimport { PitchWorkerInput } from \"@/types/worker\";\n\nlet detector: PitchDetector\u003CFloat32Array> | null = null;\n\nconst isValidPitch = (pitch: number, clarity: number): boolean => {\n  return (\n    clarity > TUNER_CONFIG.MIN_CLARITY &&\n    pitch >= TUNER_CONFIG.MIN_FREQUENCY &&\n    pitch \u003C= TUNER_CONFIG.MAX_FREQUENCY\n  );\n};\n\nself.onmessage = (e: MessageEvent\u003CPitchWorkerInput>) => {\n  const { buffer, sampleRate } = e.data;\n\n  if (!detector) {\n    detector = PitchDetector.forFloat32Array(buffer.length);\n  }\n  const [pitch, clarity] = detector.findPitch(buffer, sampleRate);\n\n  if (isValidPitch(pitch, clarity)) {\n    self.postMessage({ pitch, clarity });\n  }\n};\n\n// Отчистка памяти\nself.onclose = () => {\n  detector = null;\n};\n","pitchWorker.ts",[68,1338,1339,1353,1367,1381,1385,1417,1421,1461,1469,1488,1505,1519,1524,1528,1532,1560,1583,1587,1599,1620,1624,1651,1655,1667,1676,1680,1684,1688,1693,1708,1719],{"__ignoreMap":66},[71,1340,1341,1343,1346,1348,1351],{"class":73,"line":74},[71,1342,421],{"class":77},[71,1344,1345],{"class":81}," { PitchDetector } ",[71,1347,430],{"class":77},[71,1349,1350],{"class":149}," \"pitchy\"",[71,1352,166],{"class":81},[71,1354,1355,1357,1360,1362,1365],{"class":73,"line":85},[71,1356,421],{"class":77},[71,1358,1359],{"class":81}," { TUNER_CONFIG } ",[71,1361,430],{"class":77},[71,1363,1364],{"class":149}," \"@/constants/tuner\"",[71,1366,166],{"class":81},[71,1368,1369,1371,1374,1376,1379],{"class":73,"line":92},[71,1370,421],{"class":77},[71,1372,1373],{"class":81}," { PitchWorkerInput } ",[71,1375,430],{"class":77},[71,1377,1378],{"class":149}," \"@/types/worker\"",[71,1380,166],{"class":81},[71,1382,1383],{"class":73,"line":98},[71,1384,326],{"emptyLinePlaceholder":325},[71,1386,1387,1390,1393,1395,1398,1400,1403,1406,1409,1411,1413,1415],{"class":73,"line":107},[71,1388,1389],{"class":77},"let",[71,1391,1392],{"class":81}," detector",[71,1394,295],{"class":77},[71,1396,1397],{"class":162}," PitchDetector",[71,1399,463],{"class":81},[71,1401,1402],{"class":162},"Float32Array",[71,1404,1405],{"class":81},"> ",[71,1407,1408],{"class":77},"|",[71,1410,1088],{"class":133},[71,1412,137],{"class":77},[71,1414,1088],{"class":133},[71,1416,166],{"class":81},[71,1418,1419],{"class":73,"line":113},[71,1420,326],{"emptyLinePlaceholder":325},[71,1422,1423,1425,1428,1430,1432,1435,1437,1439,1441,1444,1446,1448,1451,1453,1456,1459],{"class":73,"line":118},[71,1424,611],{"class":77},[71,1426,1427],{"class":162}," isValidPitch",[71,1429,137],{"class":77},[71,1431,452],{"class":81},[71,1433,1434],{"class":291},"pitch",[71,1436,295],{"class":77},[71,1438,310],{"class":133},[71,1440,514],{"class":81},[71,1442,1443],{"class":291},"clarity",[71,1445,295],{"class":77},[71,1447,310],{"class":133},[71,1449,1450],{"class":81},")",[71,1452,295],{"class":77},[71,1454,1455],{"class":133}," boolean",[71,1457,1458],{"class":77}," =>",[71,1460,286],{"class":81},[71,1462,1463,1466],{"class":73,"line":124},[71,1464,1465],{"class":77},"  return",[71,1467,1468],{"class":81}," (\n",[71,1470,1471,1474,1477,1480,1482,1485],{"class":73,"line":169},[71,1472,1473],{"class":81},"    clarity ",[71,1475,1476],{"class":77},">",[71,1478,1479],{"class":133}," TUNER_CONFIG",[71,1481,393],{"class":81},[71,1483,1484],{"class":133},"MIN_CLARITY",[71,1486,1487],{"class":77}," &&\n",[71,1489,1490,1493,1496,1498,1500,1503],{"class":73,"line":209},[71,1491,1492],{"class":81},"    pitch ",[71,1494,1495],{"class":77},">=",[71,1497,1479],{"class":133},[71,1499,393],{"class":81},[71,1501,1502],{"class":133},"MIN_FREQUENCY",[71,1504,1487],{"class":77},[71,1506,1507,1509,1512,1514,1516],{"class":73,"line":230},[71,1508,1492],{"class":81},[71,1510,1511],{"class":77},"\u003C=",[71,1513,1479],{"class":133},[71,1515,393],{"class":81},[71,1517,1518],{"class":133},"MAX_FREQUENCY\n",[71,1520,1521],{"class":73,"line":1046},[71,1522,1523],{"class":81},"  );\n",[71,1525,1526],{"class":73,"line":1052},[71,1527,580],{"class":81},[71,1529,1530],{"class":73,"line":1067},[71,1531,326],{"emptyLinePlaceholder":325},[71,1533,1534,1536,1538,1540,1542,1545,1547,1549,1551,1554,1556,1558],{"class":73,"line":1099},[71,1535,444],{"class":81},[71,1537,447],{"class":162},[71,1539,137],{"class":77},[71,1541,452],{"class":81},[71,1543,1544],{"class":291},"e",[71,1546,295],{"class":77},[71,1548,460],{"class":162},[71,1550,463],{"class":81},[71,1552,1553],{"class":162},"PitchWorkerInput",[71,1555,468],{"class":81},[71,1557,471],{"class":77},[71,1559,286],{"class":81},[71,1561,1562,1564,1567,1570,1572,1575,1578,1580],{"class":73,"line":1104},[71,1563,685],{"class":77},[71,1565,1566],{"class":81}," { ",[71,1568,1569],{"class":133},"buffer",[71,1571,514],{"class":81},[71,1573,1574],{"class":133},"sampleRate",[71,1576,1577],{"class":81}," } ",[71,1579,893],{"class":77},[71,1581,1582],{"class":81}," e.data;\n",[71,1584,1585],{"class":73,"line":1110},[71,1586,326],{"emptyLinePlaceholder":325},[71,1588,1589,1591,1593,1596],{"class":73,"line":1137},[71,1590,478],{"class":77},[71,1592,452],{"class":81},[71,1594,1595],{"class":77},"!",[71,1597,1598],{"class":81},"detector) {\n",[71,1600,1601,1604,1606,1609,1612,1615,1618],{"class":73,"line":1150},[71,1602,1603],{"class":81},"    detector ",[71,1605,893],{"class":77},[71,1607,1608],{"class":81}," PitchDetector.",[71,1610,1611],{"class":162},"forFloat32Array",[71,1613,1614],{"class":81},"(buffer.",[71,1616,1617],{"class":133},"length",[71,1619,537],{"class":81},[71,1621,1622],{"class":73,"line":1161},[71,1623,575],{"class":81},[71,1625,1626,1628,1631,1633,1635,1637,1640,1642,1645,1648],{"class":73,"line":1166},[71,1627,685],{"class":77},[71,1629,1630],{"class":81}," [",[71,1632,1434],{"class":133},[71,1634,514],{"class":81},[71,1636,1443],{"class":133},[71,1638,1639],{"class":81},"] ",[71,1641,893],{"class":77},[71,1643,1644],{"class":81}," detector.",[71,1646,1647],{"class":162},"findPitch",[71,1649,1650],{"class":81},"(buffer, sampleRate);\n",[71,1652,1653],{"class":73,"line":1171},[71,1654,326],{"emptyLinePlaceholder":325},[71,1656,1657,1659,1661,1664],{"class":73,"line":1177},[71,1658,478],{"class":77},[71,1660,452],{"class":81},[71,1662,1663],{"class":162},"isValidPitch",[71,1665,1666],{"class":81},"(pitch, clarity)) {\n",[71,1668,1669,1671,1673],{"class":73,"line":1193},[71,1670,564],{"class":81},[71,1672,567],{"class":162},[71,1674,1675],{"class":81},"({ pitch, clarity });\n",[71,1677,1678],{"class":73,"line":1242},[71,1679,575],{"class":81},[71,1681,1682],{"class":73,"line":1264},[71,1683,580],{"class":81},[71,1685,1686],{"class":73,"line":1275},[71,1687,326],{"emptyLinePlaceholder":325},[71,1689,1690],{"class":73,"line":1280},[71,1691,1692],{"class":88},"// Отчистка памяти\n",[71,1694,1695,1697,1700,1702,1704,1706],{"class":73,"line":1286},[71,1696,444],{"class":81},[71,1698,1699],{"class":162},"onclose",[71,1701,137],{"class":77},[71,1703,1005],{"class":81},[71,1705,471],{"class":77},[71,1707,286],{"class":81},[71,1709,1710,1713,1715,1717],{"class":73,"line":1297},[71,1711,1712],{"class":81},"  detector ",[71,1714,893],{"class":77},[71,1716,1088],{"class":133},[71,1718,166],{"class":81},[71,1720,1721],{"class":73,"line":1307},[71,1722,580],{"class":81},[15,1724,1725,1726,1729],{},"В этом примере worker обрабатывает аудио-буфер для определения pitch (частоты тона) с помощью библиотеки ",[68,1727,1728],{},"pitchy",", фильтруя результаты по валидности и отправляя только релевантные данные обратно в основной поток.",[10,1731,1733],{"id":1732},"преимущества-в-реальных-проектах","Преимущества в реальных проектах",[15,1735,1736],{},"В проектах Web Workers особенно полезны для:",[24,1738,1739,1742],{},[27,1740,1741],{},"Обработки больших данных (например, в дашбордах с графиками).",[27,1743,1744],{},"Реал-тайм приложений (чаты, игры), где нужно обрабатывать события без задержек.",[1746,1747,1748],"style",{},"html pre.shiki code .so5gQ, html code.shiki .so5gQ{--shiki-light:#D73A49;--shiki-default:#F97583;--shiki-dark:#F97583}html pre.shiki code .slsVL, html code.shiki .slsVL{--shiki-light:#24292E;--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8}html pre.shiki code .sCsY4, html code.shiki .sCsY4{--shiki-light:#6A737D;--shiki-default:#6A737D;--shiki-dark:#6A737D}html pre.shiki code .suiK_, html code.shiki .suiK_{--shiki-light:#005CC5;--shiki-default:#79B8FF;--shiki-dark:#79B8FF}html pre.shiki code .sfrk1, html code.shiki .sfrk1{--shiki-light:#032F62;--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF}html pre.shiki code .shcOC, html code.shiki .shcOC{--shiki-light:#6F42C1;--shiki-default:#B392F0;--shiki-dark:#B392F0}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sQHwn, html code.shiki .sQHwn{--shiki-light:#E36209;--shiki-default:#FFAB70;--shiki-dark:#FFAB70}html pre.shiki code .sByVh, html code.shiki .sByVh{--shiki-light:#22863A;--shiki-default:#85E89D;--shiki-dark:#85E89D}",{"title":66,"searchDepth":85,"depth":85,"links":1750},[1751,1754,1755,1756,1757,1758,1759,1760],{"id":12,"depth":85,"text":13,"children":1752},[1753],{"id":55,"depth":92,"text":56},{"id":236,"depth":85,"text":237},{"id":370,"depth":85,"text":371},{"id":586,"depth":85,"text":587},{"id":710,"depth":85,"text":711},{"id":811,"depth":85,"text":812},{"id":1322,"depth":85,"text":1323},{"id":1732,"depth":85,"text":1733},"27/10/2025","В статье разберём Web Workers: их преимущества, типизацию в TypeScript, создание и использование в Vue.js","md",{"script":1765},[1766],{"type":1767,"key":1768,"data-nuxt-schema-org":325,"nodes":1769},"application/ld+json","schema-org-graph",[1770],{"_resolver":1771},"webPage","https://canvas.hrcd.fr/articles/launch-your-porfolio.jpg",{},{"title":1775},"Web Workers в Vue",{"props":1777},{},"/ru/articles/web-workers-v-vue","10",null,{"_resolver":1771},{"title":1775,"description":1762},{"loc":1778,"images":1784,"videos":1785},[],[],"ru/articles/Web Workers в Vue",[1788,1789,1790,1791,1792,66],"Vue","Typescript ","Performance ","Javascript ","Webworkers","DlxxJMdjOT_iiflYSNt79Unomh0FPjCtvKS9XYnOl-4",1761593250478]